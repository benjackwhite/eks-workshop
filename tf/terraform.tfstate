{
  "version": 4,
  "terraform_version": "0.12.5",
  "serial": 516,
  "lineage": "15abddd9-cd47-cd23-8bfc-1a280fd5715d",
  "outputs": {
    "aws_cert_arn": {
      "value": "arn:aws:acm:eu-west-1:453776291432:certificate/d384713b-0b8a-490c-9cff-a5e5d90dbd00",
      "type": "string"
    }
  },
  "resources": [
    {
      "module": "module.eks.module.eks",
      "mode": "data",
      "type": "aws_ami",
      "name": "eks_worker",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "architecture": "x86_64",
            "block_device_mappings": [
              {
                "device_name": "/dev/xvda",
                "ebs": {
                  "delete_on_termination": "true",
                  "encrypted": "false",
                  "iops": "0",
                  "snapshot_id": "snap-04573bd7eceb9302d",
                  "volume_size": "20",
                  "volume_type": "gp2"
                },
                "no_device": "",
                "virtual_name": ""
              }
            ],
            "creation_date": "2019-07-02T01:03:14.000Z",
            "description": "EKS Kubernetes Worker AMI with AmazonLinux2 image (k8s: 1.13.7, docker:18.06)",
            "executable_users": null,
            "filter": [
              {
                "name": "name",
                "values": [
                  "amazon-eks-node-1.13-v*"
                ]
              }
            ],
            "hypervisor": "xen",
            "id": "ami-00ac2e6b3cb38a9b9",
            "image_id": "ami-00ac2e6b3cb38a9b9",
            "image_location": "amazon/amazon-eks-node-1.13-v20190701",
            "image_owner_alias": "amazon",
            "image_type": "machine",
            "kernel_id": null,
            "most_recent": true,
            "name": "amazon-eks-node-1.13-v20190701",
            "name_regex": null,
            "owner_id": "602401143452",
            "owners": [
              "602401143452"
            ],
            "platform": null,
            "product_codes": [],
            "public": true,
            "ramdisk_id": null,
            "root_device_name": "/dev/xvda",
            "root_device_type": "ebs",
            "root_snapshot_id": "snap-04573bd7eceb9302d",
            "sriov_net_support": "simple",
            "state": "available",
            "state_reason": {
              "code": "UNSET",
              "message": "UNSET"
            },
            "tags": {},
            "virtualization_type": "hvm"
          }
        }
      ]
    },
    {
      "module": "module.eks.module.eks",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "453776291432",
            "arn": "arn:aws:sts::453776291432:assumed-role/AD-Developer/ben.white@netlight.com",
            "id": "2019-08-04 16:57:40.266345 +0000 UTC",
            "user_id": "AROAJ4R43Z5ZGE3KUKKDE:ben.white@netlight.com"
          }
        }
      ]
    },
    {
      "module": "module.eks.module.eks",
      "mode": "data",
      "type": "aws_iam_instance_profile",
      "name": "custom_worker_group_iam_instance_profile",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.eks.module.eks",
      "mode": "data",
      "type": "aws_iam_instance_profile",
      "name": "custom_worker_group_launch_template_iam_instance_profile",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.eks.module.eks",
      "mode": "data",
      "type": "aws_iam_instance_profile",
      "name": "custom_worker_group_launch_template_mixed_iam_instance_profile",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.eks.module.eks",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "cluster_assume_role_policy",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "2764486067",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSClusterAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"eks.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "override_json": null,
            "policy_id": null,
            "source_json": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "eks.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": "EKSClusterAssumeRole"
              }
            ],
            "version": "2012-10-17"
          }
        }
      ]
    },
    {
      "module": "module.eks.module.eks",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "worker_autoscaling",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "3048984674",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"eksWorkerAutoscalingAll\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeLaunchTemplateVersions\",\n        \"autoscaling:DescribeTags\",\n        \"autoscaling:DescribeLaunchConfigurations\",\n        \"autoscaling:DescribeAutoScalingInstances\",\n        \"autoscaling:DescribeAutoScalingGroups\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"eksWorkerAutoscalingOwn\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"autoscaling:UpdateAutoScalingGroup\",\n        \"autoscaling:TerminateInstanceInAutoScalingGroup\",\n        \"autoscaling:SetDesiredCapacity\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringEquals\": {\n          \"autoscaling:ResourceTag/k8s.io/cluster-autoscaler/enabled\": \"true\",\n          \"autoscaling:ResourceTag/kubernetes.io/cluster/benwhite-eks-workshop\": \"owned\"\n        }\n      }\n    }\n  ]\n}",
            "override_json": null,
            "policy_id": null,
            "source_json": null,
            "statement": [
              {
                "actions": [
                  "autoscaling:DescribeAutoScalingGroups",
                  "autoscaling:DescribeAutoScalingInstances",
                  "autoscaling:DescribeLaunchConfigurations",
                  "autoscaling:DescribeTags",
                  "ec2:DescribeLaunchTemplateVersions"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": "eksWorkerAutoscalingAll"
              },
              {
                "actions": [
                  "autoscaling:SetDesiredCapacity",
                  "autoscaling:TerminateInstanceInAutoScalingGroup",
                  "autoscaling:UpdateAutoScalingGroup"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "owned"
                    ],
                    "variable": "autoscaling:ResourceTag/kubernetes.io/cluster/benwhite-eks-workshop"
                  },
                  {
                    "test": "StringEquals",
                    "values": [
                      "true"
                    ],
                    "variable": "autoscaling:ResourceTag/k8s.io/cluster-autoscaler/enabled"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": "eksWorkerAutoscalingOwn"
              }
            ],
            "version": "2012-10-17"
          },
          "depends_on": [
            "aws_eks_cluster.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks.module.eks",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "workers_assume_role_policy",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "3778018924",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSWorkerAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "override_json": null,
            "policy_id": null,
            "source_json": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "ec2.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": "EKSWorkerAssumeRole"
              }
            ],
            "version": "2012-10-17"
          }
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_iam_role",
      "name": "aws-developers",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::453776291432:role/AD-Developer",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::453776291432:saml-provider/NL-ADFS\"},\"Action\":\"sts:AssumeRoleWithSAML\",\"Condition\":{\"StringEquals\":{\"SAML:aud\":\"https://signin.aws.amazon.com/saml\"}}}]}",
            "assume_role_policy_document": null,
            "create_date": "2018-06-19T09:56:54Z",
            "description": "",
            "id": "AD-Developer",
            "max_session_duration": 3600,
            "name": "AD-Developer",
            "path": "/",
            "permissions_boundary": "",
            "role_id": null,
            "role_name": null,
            "unique_id": "AROAJ4R43Z5ZGE3KUKKDE"
          }
        }
      ]
    },
    {
      "module": "module.eks.module.eks",
      "mode": "data",
      "type": "aws_iam_role",
      "name": "custom_cluster_iam_role",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.eks.module.eks",
      "mode": "data",
      "type": "aws_region",
      "name": "current",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "current": null,
            "description": "EU (Ireland)",
            "endpoint": "ec2.eu-west-1.amazonaws.com",
            "id": "eu-west-1",
            "name": "eu-west-1"
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_route53_zone",
      "name": "edgelabs",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "caller_reference": "RISWorkflow-RD:b7f6f382-c2e0-402c-a3a8-aa6962542c8f",
            "comment": "HostedZone created by Route53 Registrar",
            "id": "Z3W1DKT9ZF4YZC",
            "linked_service_description": null,
            "linked_service_principal": null,
            "name": "edge-labs.com.",
            "name_servers": [
              "ns-1486.awsdns-57.org",
              "ns-295.awsdns-36.com",
              "ns-1627.awsdns-11.co.uk",
              "ns-909.awsdns-49.net"
            ],
            "private_zone": false,
            "resource_record_set_count": 27,
            "tags": null,
            "vpc_id": null,
            "zone_id": "Z3W1DKT9ZF4YZC"
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_subnet_ids",
      "name": "private_subnets",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filter": null,
            "id": "vpc-aef4b3c9",
            "ids": [
              "subnet-05c17f5e",
              "subnet-67dc992e",
              "subnet-7dacde1a"
            ],
            "tags": {
              "Name": "*private*"
            },
            "vpc_id": "vpc-aef4b3c9"
          },
          "depends_on": [
            "data.aws_vpc.playground"
          ]
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_subnet_ids",
      "name": "public_subnets",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filter": null,
            "id": "vpc-aef4b3c9",
            "ids": [
              "subnet-8dc47ad6",
              "subnet-a3afddc4",
              "subnet-a3d396ea"
            ],
            "tags": {
              "Name": "*public*"
            },
            "vpc_id": "vpc-aef4b3c9"
          },
          "depends_on": [
            "data.aws_vpc.playground"
          ]
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_vpc",
      "name": "playground",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:eu-west-1:453776291432:vpc/vpc-aef4b3c9",
            "cidr_block": "10.0.0.0/16",
            "cidr_block_associations": [
              {
                "association_id": "vpc-cidr-assoc-6cfc6c04",
                "cidr_block": "10.0.0.0/16",
                "state": "associated"
              }
            ],
            "default": false,
            "dhcp_options_id": "dopt-53b56534",
            "enable_dns_hostnames": true,
            "enable_dns_support": true,
            "filter": [
              {
                "name": "tag:Name",
                "values": [
                  "Playground-VPC"
                ]
              }
            ],
            "id": "vpc-aef4b3c9",
            "instance_tenancy": "default",
            "ipv6_association_id": null,
            "ipv6_cidr_block": null,
            "main_route_table_id": "rtb-1a7fca7c",
            "owner_id": "453776291432",
            "state": "available",
            "tags": {
              "Name": "Playground-VPC",
              "Owner": "Terraform",
              "kubernetes.io/cluster/benwhite-eks-workshop": "shared"
            }
          }
        }
      ]
    },
    {
      "module": "module.eks.module.eks",
      "mode": "data",
      "type": "template_file",
      "name": "aws_authenticator_env_variables",
      "each": "list",
      "provider": "provider.template",
      "instances": []
    },
    {
      "module": "module.eks.module.eks",
      "mode": "data",
      "type": "template_file",
      "name": "config_map_aws_auth",
      "provider": "provider.template",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "bfff27b5004081ad2858a22beb3e6852e4653636528fbbc0601601f000b91aa1",
            "rendered": "apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: aws-auth\n  namespace: kube-system\ndata:\n  mapRoles: |\n    - rolearn: arn:aws:iam::453776291432:role/benwhite-eks-workshop20190804164016233800000006\n      username: system:node:{{EC2PrivateDNSName}}\n      groups:\n        - system:bootstrappers\n        - system:nodes\n\n    - rolearn: arn:aws:iam::453776291432:role/AD-Developer\n      username: aws-developer\n      groups:\n        - system:masters\n\n  mapUsers: |\n\n  mapAccounts: |\n\n",
            "template": "apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: aws-auth\n  namespace: kube-system\ndata:\n  mapRoles: |\n${worker_role_arn}\n${map_roles}\n  mapUsers: |\n${map_users}\n  mapAccounts: |\n${map_accounts}\n",
            "vars": {
              "map_accounts": "",
              "map_roles": "    - rolearn: arn:aws:iam::453776291432:role/AD-Developer\n      username: aws-developer\n      groups:\n        - system:masters\n",
              "map_users": "",
              "worker_role_arn": "    - rolearn: arn:aws:iam::453776291432:role/benwhite-eks-workshop20190804164016233800000006\n      username: system:node:{{EC2PrivateDNSName}}\n      groups:\n        - system:bootstrappers\n        - system:nodes\n"
            }
          },
          "depends_on": [
            "data.template_file.launch_template_mixed_worker_role_arns",
            "data.template_file.launch_template_worker_role_arns",
            "data.template_file.map_accounts",
            "data.template_file.map_roles",
            "data.template_file.map_users",
            "data.template_file.worker_role_arns"
          ]
        }
      ]
    },
    {
      "module": "module.eks.module.eks",
      "mode": "data",
      "type": "template_file",
      "name": "kubeconfig",
      "provider": "provider.template",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "d51adb3d38285ea7362f18e98f0d696a31152cee509a5ed588c77529eb5a9876",
            "rendered": "apiVersion: v1\npreferences: {}\nkind: Config\n\nclusters:\n- cluster:\n    server: https://05DB375EB24EE6A4B3651478D0425EB7.sk1.eu-west-1.eks.amazonaws.com\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRFNU1EZ3dOREUyTXpjek0xb1hEVEk1TURnd01URTJNemN6TTFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTEM3CnhrTzdDZy9UZHBIT1JxUjN5MS9NdnFZTDVadDFVelhTbW1pYXZsSnR4U1dOa2dFZlB4WUtJT08vSTFhYlQ3M2wKN01SK21ha3BLQzB1VEtuQlJ5OU5wN2ZEU0ROOE9ldmpGNUV3WVN5N2JwRDY1NkZOamVSU1VzQWRuWnhZMng1RwpxSUhVNjIrS2dwYzl1ZGdreldzcEZRS21ZVFJNaml3SzNwaHZWbTJCb1QxcVF6bXdpNFhjUEJsbUxGSkpBUjN1ClZvZWxNODlFQXRNMDBXdThGNWlKTkFDS1k2OWEvdzlibjhENFFtL2FwRmt3ZlNYTUlqeWF0OUlCZUg2Q3Y3VEoKWEkvSmo1VFlZQklSeHdnMVBaQU1VT2dZWXhRQW5BNVFKK09Hb3oyQzg3MlRsL29lcjlORWtBWHBSZE1tbVRFNApzV3huMkpiaE1ZRTFMYmI4WUQ4Q0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFEQjkwK0FrNFcwb1RsYU04cUlZQjluSmxieEgKT3JDdEo4VElISElsYlY5ZVkzUXdLQ000Yy9aL00ybW9NbC93ZVcrZncxKzVnM2Rmc2RjcU91cDlUMWl3aGpZTgpXeFZSVXhaSU9yb2FUOUQ2eUhyL1dxQ1VPa0oyVnZuUytVVzdnQXlJZGVrQlRGS3FJV1lsQ0hrVjdXQU5WWHFyCjQ2QXBjMXp5dmZ6NHVoQUpYQitBc1oybm0ydjE0TVZFTDJxTGZrYXRoeUZzVWlwWFUzVHVJN1JzOVY1aW8xMHIKdFN0YVVJRmFyMGZSZ1g1dzJJUFBSMGJLMmdaZTRIY2RleS9qRnJrY0NuUWZrOUs5NnBDZXFZaDdOZHJpM2VDeQpYZ1ZLMW5ZdkQ5K3d6TDZmZ3RPL2tHUjF0ZExEOVpzMk5QOFQzT2ZOV0FieXFEUlJ5T3RJVVF4SmxyRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\n  name: eks_benwhite-eks-workshop\n\ncontexts:\n- context:\n    cluster: eks_benwhite-eks-workshop\n    user: eks_benwhite-eks-workshop\n  name: eks_benwhite-eks-workshop\n\ncurrent-context: eks_benwhite-eks-workshop\n\nusers:\n- name: eks_benwhite-eks-workshop\n  user:\n    exec:\n      apiVersion: client.authentication.k8s.io/v1alpha1\n      command: aws-iam-authenticator\n      args:\n        - \"token\"\n        - \"-i\"\n        - \"benwhite-eks-workshop\"\n\n\n",
            "template": "apiVersion: v1\npreferences: {}\nkind: Config\n\nclusters:\n- cluster:\n    server: ${endpoint}\n    certificate-authority-data: ${cluster_auth_base64}\n  name: ${kubeconfig_name}\n\ncontexts:\n- context:\n    cluster: ${kubeconfig_name}\n    user: ${kubeconfig_name}\n  name: ${kubeconfig_name}\n\ncurrent-context: ${kubeconfig_name}\n\nusers:\n- name: ${kubeconfig_name}\n  user:\n    exec:\n      apiVersion: client.authentication.k8s.io/v1alpha1\n      command: ${aws_authenticator_command}\n      args:\n${aws_authenticator_command_args}\n${aws_authenticator_additional_args}\n${aws_authenticator_env_variables}\n",
            "vars": {
              "aws_authenticator_additional_args": "",
              "aws_authenticator_command": "aws-iam-authenticator",
              "aws_authenticator_command_args": "        - \"token\"\n        - \"-i\"\n        - \"benwhite-eks-workshop\"",
              "aws_authenticator_env_variables": "",
              "cluster_auth_base64": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRFNU1EZ3dOREUyTXpjek0xb1hEVEk1TURnd01URTJNemN6TTFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTEM3CnhrTzdDZy9UZHBIT1JxUjN5MS9NdnFZTDVadDFVelhTbW1pYXZsSnR4U1dOa2dFZlB4WUtJT08vSTFhYlQ3M2wKN01SK21ha3BLQzB1VEtuQlJ5OU5wN2ZEU0ROOE9ldmpGNUV3WVN5N2JwRDY1NkZOamVSU1VzQWRuWnhZMng1RwpxSUhVNjIrS2dwYzl1ZGdreldzcEZRS21ZVFJNaml3SzNwaHZWbTJCb1QxcVF6bXdpNFhjUEJsbUxGSkpBUjN1ClZvZWxNODlFQXRNMDBXdThGNWlKTkFDS1k2OWEvdzlibjhENFFtL2FwRmt3ZlNYTUlqeWF0OUlCZUg2Q3Y3VEoKWEkvSmo1VFlZQklSeHdnMVBaQU1VT2dZWXhRQW5BNVFKK09Hb3oyQzg3MlRsL29lcjlORWtBWHBSZE1tbVRFNApzV3huMkpiaE1ZRTFMYmI4WUQ4Q0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFEQjkwK0FrNFcwb1RsYU04cUlZQjluSmxieEgKT3JDdEo4VElISElsYlY5ZVkzUXdLQ000Yy9aL00ybW9NbC93ZVcrZncxKzVnM2Rmc2RjcU91cDlUMWl3aGpZTgpXeFZSVXhaSU9yb2FUOUQ2eUhyL1dxQ1VPa0oyVnZuUytVVzdnQXlJZGVrQlRGS3FJV1lsQ0hrVjdXQU5WWHFyCjQ2QXBjMXp5dmZ6NHVoQUpYQitBc1oybm0ydjE0TVZFTDJxTGZrYXRoeUZzVWlwWFUzVHVJN1JzOVY1aW8xMHIKdFN0YVVJRmFyMGZSZ1g1dzJJUFBSMGJLMmdaZTRIY2RleS9qRnJrY0NuUWZrOUs5NnBDZXFZaDdOZHJpM2VDeQpYZ1ZLMW5ZdkQ5K3d6TDZmZ3RPL2tHUjF0ZExEOVpzMk5QOFQzT2ZOV0FieXFEUlJ5T3RJVVF4SmxyRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
              "endpoint": "https://05DB375EB24EE6A4B3651478D0425EB7.sk1.eu-west-1.eks.amazonaws.com",
              "kubeconfig_name": "eks_benwhite-eks-workshop",
              "region": "eu-west-1"
            }
          },
          "depends_on": [
            "aws_eks_cluster.this",
            "data.aws_region.current",
            "data.template_file.aws_authenticator_env_variables"
          ]
        }
      ]
    },
    {
      "module": "module.eks.module.eks",
      "mode": "data",
      "type": "template_file",
      "name": "launch_template_mixed_worker_role_arns",
      "each": "list",
      "provider": "provider.template",
      "instances": []
    },
    {
      "module": "module.eks.module.eks",
      "mode": "data",
      "type": "template_file",
      "name": "launch_template_userdata",
      "each": "list",
      "provider": "provider.template",
      "instances": []
    },
    {
      "module": "module.eks.module.eks",
      "mode": "data",
      "type": "template_file",
      "name": "launch_template_worker_role_arns",
      "each": "list",
      "provider": "provider.template",
      "instances": []
    },
    {
      "module": "module.eks.module.eks",
      "mode": "data",
      "type": "template_file",
      "name": "map_accounts",
      "each": "list",
      "provider": "provider.template",
      "instances": []
    },
    {
      "module": "module.eks.module.eks",
      "mode": "data",
      "type": "template_file",
      "name": "map_roles",
      "each": "list",
      "provider": "provider.template",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "16d325d55f4197f65c0ff7efaead768dbc3fd1e2c8518ea9fcebcf2bd99addae",
            "rendered": "    - rolearn: arn:aws:iam::453776291432:role/AD-Developer\n      username: aws-developer\n      groups:\n        - system:masters\n",
            "template": "    - rolearn: ${role_arn}\n      username: ${username}\n      groups:\n        - ${group}\n",
            "vars": {
              "group": "system:masters",
              "role_arn": "arn:aws:iam::453776291432:role/AD-Developer",
              "username": "aws-developer"
            }
          }
        }
      ]
    },
    {
      "module": "module.eks.module.eks",
      "mode": "data",
      "type": "template_file",
      "name": "map_users",
      "each": "list",
      "provider": "provider.template",
      "instances": []
    },
    {
      "module": "module.eks.module.eks",
      "mode": "data",
      "type": "template_file",
      "name": "userdata",
      "each": "list",
      "provider": "provider.template",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "cfa1b74191e184a70d7ad5a72df4cfdac90afe57afbaa1496543df8ff04a17e0",
            "rendered": "#!/bin/bash -xe\n\n# Allow user supplied pre userdata code\nexec \u003e \u003e(tee /var/log/user-data.log|logger -t user-data -s 2\u003e/dev/console) 2\u003e\u00261\nyum install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_amd64/amazon-ssm-agent.rpm\nsystemctl enable amazon-ssm-agent\nsystemctl start amazon-ssm-agent\nsed -i -e 's/2048/65536/g' /etc/docker/daemon.json\nsed -i -e 's/8192/65536/g' /etc/docker/daemon.json\nsystemctl restart docker.service\n\n\n# Bootstrap and join the cluster\n/etc/eks/bootstrap.sh --b64-cluster-ca 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRFNU1EZ3dOREUyTXpjek0xb1hEVEk1TURnd01URTJNemN6TTFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTEM3CnhrTzdDZy9UZHBIT1JxUjN5MS9NdnFZTDVadDFVelhTbW1pYXZsSnR4U1dOa2dFZlB4WUtJT08vSTFhYlQ3M2wKN01SK21ha3BLQzB1VEtuQlJ5OU5wN2ZEU0ROOE9ldmpGNUV3WVN5N2JwRDY1NkZOamVSU1VzQWRuWnhZMng1RwpxSUhVNjIrS2dwYzl1ZGdreldzcEZRS21ZVFJNaml3SzNwaHZWbTJCb1QxcVF6bXdpNFhjUEJsbUxGSkpBUjN1ClZvZWxNODlFQXRNMDBXdThGNWlKTkFDS1k2OWEvdzlibjhENFFtL2FwRmt3ZlNYTUlqeWF0OUlCZUg2Q3Y3VEoKWEkvSmo1VFlZQklSeHdnMVBaQU1VT2dZWXhRQW5BNVFKK09Hb3oyQzg3MlRsL29lcjlORWtBWHBSZE1tbVRFNApzV3huMkpiaE1ZRTFMYmI4WUQ4Q0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFEQjkwK0FrNFcwb1RsYU04cUlZQjluSmxieEgKT3JDdEo4VElISElsYlY5ZVkzUXdLQ000Yy9aL00ybW9NbC93ZVcrZncxKzVnM2Rmc2RjcU91cDlUMWl3aGpZTgpXeFZSVXhaSU9yb2FUOUQ2eUhyL1dxQ1VPa0oyVnZuUytVVzdnQXlJZGVrQlRGS3FJV1lsQ0hrVjdXQU5WWHFyCjQ2QXBjMXp5dmZ6NHVoQUpYQitBc1oybm0ydjE0TVZFTDJxTGZrYXRoeUZzVWlwWFUzVHVJN1JzOVY1aW8xMHIKdFN0YVVJRmFyMGZSZ1g1dzJJUFBSMGJLMmdaZTRIY2RleS9qRnJrY0NuUWZrOUs5NnBDZXFZaDdOZHJpM2VDeQpYZ1ZLMW5ZdkQ5K3d6TDZmZ3RPL2tHUjF0ZExEOVpzMk5QOFQzT2ZOV0FieXFEUlJ5T3RJVVF4SmxyRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=' --apiserver-endpoint 'https://05DB375EB24EE6A4B3651478D0425EB7.sk1.eu-west-1.eks.amazonaws.com'  --kubelet-extra-args '' 'benwhite-eks-workshop'\n\n# Allow user supplied userdata code\n\n",
            "template": "#!/bin/bash -xe\n\n# Allow user supplied pre userdata code\n${pre_userdata}\n\n# Bootstrap and join the cluster\n/etc/eks/bootstrap.sh --b64-cluster-ca '${cluster_auth_base64}' --apiserver-endpoint '${endpoint}' ${bootstrap_extra_args} --kubelet-extra-args '${kubelet_extra_args}' '${cluster_name}'\n\n# Allow user supplied userdata code\n${additional_userdata}\n",
            "vars": {
              "additional_userdata": "",
              "bootstrap_extra_args": "",
              "cluster_auth_base64": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRFNU1EZ3dOREUyTXpjek0xb1hEVEk1TURnd01URTJNemN6TTFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTEM3CnhrTzdDZy9UZHBIT1JxUjN5MS9NdnFZTDVadDFVelhTbW1pYXZsSnR4U1dOa2dFZlB4WUtJT08vSTFhYlQ3M2wKN01SK21ha3BLQzB1VEtuQlJ5OU5wN2ZEU0ROOE9ldmpGNUV3WVN5N2JwRDY1NkZOamVSU1VzQWRuWnhZMng1RwpxSUhVNjIrS2dwYzl1ZGdreldzcEZRS21ZVFJNaml3SzNwaHZWbTJCb1QxcVF6bXdpNFhjUEJsbUxGSkpBUjN1ClZvZWxNODlFQXRNMDBXdThGNWlKTkFDS1k2OWEvdzlibjhENFFtL2FwRmt3ZlNYTUlqeWF0OUlCZUg2Q3Y3VEoKWEkvSmo1VFlZQklSeHdnMVBaQU1VT2dZWXhRQW5BNVFKK09Hb3oyQzg3MlRsL29lcjlORWtBWHBSZE1tbVRFNApzV3huMkpiaE1ZRTFMYmI4WUQ4Q0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFEQjkwK0FrNFcwb1RsYU04cUlZQjluSmxieEgKT3JDdEo4VElISElsYlY5ZVkzUXdLQ000Yy9aL00ybW9NbC93ZVcrZncxKzVnM2Rmc2RjcU91cDlUMWl3aGpZTgpXeFZSVXhaSU9yb2FUOUQ2eUhyL1dxQ1VPa0oyVnZuUytVVzdnQXlJZGVrQlRGS3FJV1lsQ0hrVjdXQU5WWHFyCjQ2QXBjMXp5dmZ6NHVoQUpYQitBc1oybm0ydjE0TVZFTDJxTGZrYXRoeUZzVWlwWFUzVHVJN1JzOVY1aW8xMHIKdFN0YVVJRmFyMGZSZ1g1dzJJUFBSMGJLMmdaZTRIY2RleS9qRnJrY0NuUWZrOUs5NnBDZXFZaDdOZHJpM2VDeQpYZ1ZLMW5ZdkQ5K3d6TDZmZ3RPL2tHUjF0ZExEOVpzMk5QOFQzT2ZOV0FieXFEUlJ5T3RJVVF4SmxyRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
              "cluster_name": "benwhite-eks-workshop",
              "endpoint": "https://05DB375EB24EE6A4B3651478D0425EB7.sk1.eu-west-1.eks.amazonaws.com",
              "kubelet_extra_args": "",
              "pre_userdata": "exec \u003e \u003e(tee /var/log/user-data.log|logger -t user-data -s 2\u003e/dev/console) 2\u003e\u00261\nyum install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_amd64/amazon-ssm-agent.rpm\nsystemctl enable amazon-ssm-agent\nsystemctl start amazon-ssm-agent\nsed -i -e 's/2048/65536/g' /etc/docker/daemon.json\nsed -i -e 's/8192/65536/g' /etc/docker/daemon.json\nsystemctl restart docker.service\n"
            }
          },
          "depends_on": [
            "aws_eks_cluster.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks.module.eks",
      "mode": "data",
      "type": "template_file",
      "name": "worker_role_arns",
      "each": "list",
      "provider": "provider.template",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "deb3cc30b57a221042359612e3d47e13146aed990fd3b3c5ee48ff6d9a9e2a47",
            "rendered": "    - rolearn: arn:aws:iam::453776291432:role/benwhite-eks-workshop20190804164016233800000006\n      username: system:node:{{EC2PrivateDNSName}}\n      groups:\n        - system:bootstrappers\n        - system:nodes\n",
            "template": "    - rolearn: ${worker_role_arn}\n      username: system:node:{{EC2PrivateDNSName}}\n      groups:\n        - system:bootstrappers\n        - system:nodes\n",
            "vars": {
              "worker_role_arn": "arn:aws:iam::453776291432:role/benwhite-eks-workshop20190804164016233800000006"
            }
          },
          "depends_on": [
            "aws_iam_instance_profile.workers",
            "data.aws_caller_identity.current",
            "data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile"
          ]
        }
      ]
    },
    {
      "module": "module.eks.module.eks",
      "mode": "data",
      "type": "template_file",
      "name": "workers_launch_template_mixed",
      "each": "list",
      "provider": "provider.template",
      "instances": []
    },
    {
      "mode": "managed",
      "type": "aws_acm_certificate",
      "name": "cert",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:acm:eu-west-1:453776291432:certificate/d384713b-0b8a-490c-9cff-a5e5d90dbd00",
            "certificate_body": null,
            "certificate_chain": null,
            "domain_name": "eks-workshop.edge-labs.com",
            "domain_validation_options": [
              {
                "domain_name": "eks-workshop.edge-labs.com",
                "resource_record_name": "_e0d0a07e5584a7b9530eed224adbcbb6.eks-workshop.edge-labs.com.",
                "resource_record_type": "CNAME",
                "resource_record_value": "_ef55731bfed4157fa6b8e61eccda8b12.duyqrilejt.acm-validations.aws."
              },
              {
                "domain_name": "*.eks-workshop.edge-labs.com",
                "resource_record_name": "_e0d0a07e5584a7b9530eed224adbcbb6.eks-workshop.edge-labs.com.",
                "resource_record_type": "CNAME",
                "resource_record_value": "_ef55731bfed4157fa6b8e61eccda8b12.duyqrilejt.acm-validations.aws."
              }
            ],
            "id": "arn:aws:acm:eu-west-1:453776291432:certificate/d384713b-0b8a-490c-9cff-a5e5d90dbd00",
            "private_key": null,
            "subject_alternative_names": [
              "*.eks-workshop.edge-labs.com"
            ],
            "tags": {},
            "validation_emails": [],
            "validation_method": "DNS"
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_acm_certificate_validation",
      "name": "cert",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "certificate_arn": "arn:aws:acm:eu-west-1:453776291432:certificate/d384713b-0b8a-490c-9cff-a5e5d90dbd00",
            "id": "2019-08-04 16:31:47 +0000 UTC",
            "timeouts": null,
            "validation_record_fqdns": [
              "_e0d0a07e5584a7b9530eed224adbcbb6.eks-workshop.edge-labs.com"
            ]
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNzAwMDAwMDAwMDAwfX0=",
          "depends_on": [
            "aws_acm_certificate.cert",
            "aws_route53_record.cert_validation"
          ]
        }
      ]
    },
    {
      "module": "module.eks.module.eks",
      "mode": "managed",
      "type": "aws_autoscaling_group",
      "name": "workers",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:autoscaling:eu-west-1:453776291432:autoScalingGroup:1cf248c3-1a03-4f16-bf27-5a2b0c2efb9c:autoScalingGroupName/benwhite-eks-workshop-020190804164029188400000010",
            "availability_zones": [
              "eu-west-1a",
              "eu-west-1b",
              "eu-west-1c"
            ],
            "default_cooldown": 300,
            "desired_capacity": 3,
            "enabled_metrics": [],
            "force_delete": false,
            "health_check_grace_period": 300,
            "health_check_type": "EC2",
            "id": "benwhite-eks-workshop-020190804164029188400000010",
            "initial_lifecycle_hook": [],
            "launch_configuration": "benwhite-eks-workshop-020190804165803846800000001",
            "launch_template": [],
            "load_balancers": [],
            "max_size": 6,
            "metrics_granularity": "1Minute",
            "min_elb_capacity": null,
            "min_size": 1,
            "mixed_instances_policy": [],
            "name": "benwhite-eks-workshop-020190804164029188400000010",
            "name_prefix": "benwhite-eks-workshop-0",
            "placement_group": "",
            "protect_from_scale_in": false,
            "service_linked_role_arn": "arn:aws:iam::453776291432:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling",
            "suspended_processes": [
              "AZRebalance"
            ],
            "tag": [],
            "tags": [
              {
                "key": "Name",
                "propagate_at_launch": "true",
                "value": "benwhite-eks-workshop-0-eks_asg"
              },
              {
                "key": "kubernetes.io/cluster/benwhite-eks-workshop",
                "propagate_at_launch": "true",
                "value": "owned"
              },
              {
                "key": "k8s.io/cluster-autoscaler/disabled",
                "propagate_at_launch": "false",
                "value": "true"
              },
              {
                "key": "k8s.io/cluster-autoscaler/benwhite-eks-workshop",
                "propagate_at_launch": "false",
                "value": "benwhite-eks-workshop"
              },
              {
                "key": "k8s.io/cluster-autoscaler/node-template/resources/ephemeral-storage",
                "propagate_at_launch": "false",
                "value": "100Gi"
              }
            ],
            "target_group_arns": [],
            "termination_policies": [],
            "timeouts": null,
            "vpc_zone_identifier": [
              "subnet-05c17f5e",
              "subnet-67dc992e",
              "subnet-7dacde1a"
            ],
            "wait_for_capacity_timeout": "10m",
            "wait_for_elb_capacity": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "depends_on": [
            "aws_eks_cluster.this",
            "aws_launch_configuration.workers"
          ]
        }
      ]
    },
    {
      "module": "module.eks.module.eks",
      "mode": "managed",
      "type": "aws_autoscaling_group",
      "name": "workers_launch_template",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.eks.module.eks",
      "mode": "managed",
      "type": "aws_autoscaling_group",
      "name": "workers_launch_template_mixed",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.eks.module.eks",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "this",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.eks.module.eks",
      "mode": "managed",
      "type": "aws_eks_cluster",
      "name": "this",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:eks:eu-west-1:453776291432:cluster/benwhite-eks-workshop",
            "certificate_authority": [
              {
                "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRFNU1EZ3dOREUyTXpjek0xb1hEVEk1TURnd01URTJNemN6TTFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTEM3CnhrTzdDZy9UZHBIT1JxUjN5MS9NdnFZTDVadDFVelhTbW1pYXZsSnR4U1dOa2dFZlB4WUtJT08vSTFhYlQ3M2wKN01SK21ha3BLQzB1VEtuQlJ5OU5wN2ZEU0ROOE9ldmpGNUV3WVN5N2JwRDY1NkZOamVSU1VzQWRuWnhZMng1RwpxSUhVNjIrS2dwYzl1ZGdreldzcEZRS21ZVFJNaml3SzNwaHZWbTJCb1QxcVF6bXdpNFhjUEJsbUxGSkpBUjN1ClZvZWxNODlFQXRNMDBXdThGNWlKTkFDS1k2OWEvdzlibjhENFFtL2FwRmt3ZlNYTUlqeWF0OUlCZUg2Q3Y3VEoKWEkvSmo1VFlZQklSeHdnMVBaQU1VT2dZWXhRQW5BNVFKK09Hb3oyQzg3MlRsL29lcjlORWtBWHBSZE1tbVRFNApzV3huMkpiaE1ZRTFMYmI4WUQ4Q0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFEQjkwK0FrNFcwb1RsYU04cUlZQjluSmxieEgKT3JDdEo4VElISElsYlY5ZVkzUXdLQ000Yy9aL00ybW9NbC93ZVcrZncxKzVnM2Rmc2RjcU91cDlUMWl3aGpZTgpXeFZSVXhaSU9yb2FUOUQ2eUhyL1dxQ1VPa0oyVnZuUytVVzdnQXlJZGVrQlRGS3FJV1lsQ0hrVjdXQU5WWHFyCjQ2QXBjMXp5dmZ6NHVoQUpYQitBc1oybm0ydjE0TVZFTDJxTGZrYXRoeUZzVWlwWFUzVHVJN1JzOVY1aW8xMHIKdFN0YVVJRmFyMGZSZ1g1dzJJUFBSMGJLMmdaZTRIY2RleS9qRnJrY0NuUWZrOUs5NnBDZXFZaDdOZHJpM2VDeQpYZ1ZLMW5ZdkQ5K3d6TDZmZ3RPL2tHUjF0ZExEOVpzMk5QOFQzT2ZOV0FieXFEUlJ5T3RJVVF4SmxyRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
              }
            ],
            "created_at": "2019-08-04 16:30:46 +0000 UTC",
            "enabled_cluster_log_types": [],
            "endpoint": "https://05DB375EB24EE6A4B3651478D0425EB7.sk1.eu-west-1.eks.amazonaws.com",
            "id": "benwhite-eks-workshop",
            "name": "benwhite-eks-workshop",
            "platform_version": "eks.2",
            "role_arn": "arn:aws:iam::453776291432:role/benwhite-eks-workshop20190804163024216400000001",
            "timeouts": {
              "create": "15m",
              "delete": "15m",
              "update": null
            },
            "version": "1.13",
            "vpc_config": [
              {
                "endpoint_private_access": false,
                "endpoint_public_access": true,
                "security_group_ids": [
                  "sg-0ae63b6e459d13a6b"
                ],
                "subnet_ids": [
                  "subnet-05c17f5e",
                  "subnet-67dc992e",
                  "subnet-7dacde1a",
                  "subnet-8dc47ad6",
                  "subnet-a3afddc4",
                  "subnet-a3d396ea"
                ],
                "vpc_id": "vpc-aef4b3c9"
              }
            ]
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo5MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwLCJ1cGRhdGUiOjM2MDAwMDAwMDAwMDB9fQ==",
          "depends_on": [
            "aws_cloudwatch_log_group.this",
            "aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy"
          ]
        }
      ]
    },
    {
      "module": "module.eks.module.eks",
      "mode": "managed",
      "type": "aws_iam_instance_profile",
      "name": "workers",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::453776291432:instance-profile/benwhite-eks-workshop20190804164017256400000009",
            "create_date": "2019-08-04T16:40:17Z",
            "id": "benwhite-eks-workshop20190804164017256400000009",
            "name": "benwhite-eks-workshop20190804164017256400000009",
            "name_prefix": "benwhite-eks-workshop",
            "path": "/",
            "role": "benwhite-eks-workshop20190804164016233800000006",
            "roles": [
              "benwhite-eks-workshop20190804164016233800000006"
            ],
            "unique_id": "AIPAWTJZMWZUBMQ5UFTDM"
          },
          "private": "bnVsbA==",
          "depends_on": [
            "aws_eks_cluster.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks.module.eks",
      "mode": "managed",
      "type": "aws_iam_instance_profile",
      "name": "workers_launch_template",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.eks.module.eks",
      "mode": "managed",
      "type": "aws_iam_instance_profile",
      "name": "workers_launch_template_mixed",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.eks.module.eks",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "worker_autoscaling",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::453776291432:policy/eks-worker-autoscaling-benwhite-eks-workshop20190804164016273000000008",
            "description": "EKS worker node autoscaling policy for cluster benwhite-eks-workshop",
            "id": "arn:aws:iam::453776291432:policy/eks-worker-autoscaling-benwhite-eks-workshop20190804164016273000000008",
            "name": "eks-worker-autoscaling-benwhite-eks-workshop20190804164016273000000008",
            "name_prefix": "eks-worker-autoscaling-benwhite-eks-workshop",
            "path": "/",
            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"eksWorkerAutoscalingAll\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeLaunchTemplateVersions\",\n        \"autoscaling:DescribeTags\",\n        \"autoscaling:DescribeLaunchConfigurations\",\n        \"autoscaling:DescribeAutoScalingInstances\",\n        \"autoscaling:DescribeAutoScalingGroups\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"eksWorkerAutoscalingOwn\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"autoscaling:UpdateAutoScalingGroup\",\n        \"autoscaling:TerminateInstanceInAutoScalingGroup\",\n        \"autoscaling:SetDesiredCapacity\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringEquals\": {\n          \"autoscaling:ResourceTag/k8s.io/cluster-autoscaler/enabled\": \"true\",\n          \"autoscaling:ResourceTag/kubernetes.io/cluster/benwhite-eks-workshop\": \"owned\"\n        }\n      }\n    }\n  ]\n}"
          },
          "private": "bnVsbA==",
          "depends_on": [
            "aws_eks_cluster.this",
            "data.aws_iam_policy_document.worker_autoscaling"
          ]
        }
      ]
    },
    {
      "module": "module.eks.module.eks",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "cluster",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::453776291432:role/benwhite-eks-workshop20190804163024216400000001",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"EKSClusterAssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2019-08-04T16:30:24Z",
            "description": "",
            "force_detach_policies": true,
            "id": "benwhite-eks-workshop20190804163024216400000001",
            "max_session_duration": 3600,
            "name": "benwhite-eks-workshop20190804163024216400000001",
            "name_prefix": "benwhite-eks-workshop",
            "path": "/",
            "permissions_boundary": "",
            "tags": {},
            "unique_id": "AROAWTJZMWZUPB73WXDIG"
          },
          "private": "bnVsbA==",
          "depends_on": [
            "data.aws_iam_policy_document.cluster_assume_role_policy"
          ]
        }
      ]
    },
    {
      "module": "module.eks.module.eks",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "workers",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::453776291432:role/benwhite-eks-workshop20190804164016233800000006",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"EKSWorkerAssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2019-08-04T16:40:16Z",
            "description": "",
            "force_detach_policies": true,
            "id": "benwhite-eks-workshop20190804164016233800000006",
            "max_session_duration": 3600,
            "name": "benwhite-eks-workshop20190804164016233800000006",
            "name_prefix": "benwhite-eks-workshop",
            "path": "/",
            "permissions_boundary": "",
            "tags": {},
            "unique_id": "AROAWTJZMWZUBUYRS5Q37"
          },
          "private": "bnVsbA==",
          "depends_on": [
            "aws_eks_cluster.this",
            "data.aws_iam_policy_document.workers_assume_role_policy"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "additional-worker-policy",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "benwhite-eks-workshop20190804164016233800000006:eks-worker-additional",
            "name": "eks-worker-additional",
            "name_prefix": null,
            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"logs:CreateLogGroup\",\n        \"logs:CreateLogStream\",\n        \"logs:PutLogEvents\",\n        \"logs:DescribeLogGroups\",\n        \"logs:DescribeLogStreams\"\n      ],\n      \"Resource\": [\n        \"arn:aws:logs:*:*:*\"\n      ]\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"route53:ChangeResourceRecordSets\"\n      ],\n      \"Resource\": [\n        \"arn:aws:route53:::hostedzone/*\"\n      ]\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"route53:ListHostedZones\",\n        \"route53:ListResourceRecordSets\"\n      ],\n      \"Resource\": [\n        \"*\"\n      ]\n    }\n  ]\n}\n",
            "role": "benwhite-eks-workshop20190804164016233800000006"
          },
          "private": "bnVsbA==",
          "depends_on": [
            "module.eks"
          ]
        }
      ]
    },
    {
      "module": "module.eks.module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "cluster_AmazonEKSClusterPolicy",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "benwhite-eks-workshop20190804163024216400000001-20190804163026104300000004",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
            "role": "benwhite-eks-workshop20190804163024216400000001"
          },
          "private": "bnVsbA==",
          "depends_on": [
            "aws_iam_role.cluster[0]"
          ]
        }
      ]
    },
    {
      "module": "module.eks.module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "cluster_AmazonEKSServicePolicy",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "benwhite-eks-workshop20190804163024216400000001-20190804163026114800000005",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSServicePolicy",
            "role": "benwhite-eks-workshop20190804163024216400000001"
          },
          "private": "bnVsbA==",
          "depends_on": [
            "aws_iam_role.cluster[0]"
          ]
        }
      ]
    },
    {
      "module": "module.eks.module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "workers_AmazonEC2ContainerRegistryReadOnly",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "benwhite-eks-workshop20190804164016233800000006-2019080416401774790000000c",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
            "role": "benwhite-eks-workshop20190804164016233800000006"
          },
          "private": "bnVsbA==",
          "depends_on": [
            "aws_iam_role.workers[0]"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "workers_AmazonEC2RoleforSSM",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "benwhite-eks-workshop20190804164016233800000006-2019080416401770020000000a",
            "policy_arn": "arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM",
            "role": "benwhite-eks-workshop20190804164016233800000006"
          },
          "private": "bnVsbA==",
          "depends_on": [
            "module.eks"
          ]
        }
      ]
    },
    {
      "module": "module.eks.module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "workers_AmazonEKSWorkerNodePolicy",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "benwhite-eks-workshop20190804164016233800000006-2019080416401770500000000b",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
            "role": "benwhite-eks-workshop20190804164016233800000006"
          },
          "private": "bnVsbA==",
          "depends_on": [
            "aws_iam_role.workers[0]"
          ]
        }
      ]
    },
    {
      "module": "module.eks.module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "workers_AmazonEKS_CNI_Policy",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "benwhite-eks-workshop20190804164016233800000006-2019080416401776670000000d",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
            "role": "benwhite-eks-workshop20190804164016233800000006"
          },
          "private": "bnVsbA==",
          "depends_on": [
            "aws_iam_role.workers[0]"
          ]
        }
      ]
    },
    {
      "module": "module.eks.module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "workers_additional_policies",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.eks.module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "workers_autoscaling",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "benwhite-eks-workshop20190804164016233800000006-2019080416401823970000000e",
            "policy_arn": "arn:aws:iam::453776291432:policy/eks-worker-autoscaling-benwhite-eks-workshop20190804164016273000000008",
            "role": "benwhite-eks-workshop20190804164016233800000006"
          },
          "private": "bnVsbA==",
          "depends_on": [
            "aws_iam_policy.worker_autoscaling[0]",
            "aws_iam_role.workers[0]"
          ]
        }
      ]
    },
    {
      "module": "module.eks.module.eks",
      "mode": "managed",
      "type": "aws_launch_configuration",
      "name": "workers",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "associate_public_ip_address": false,
            "ebs_block_device": [],
            "ebs_optimized": true,
            "enable_monitoring": true,
            "ephemeral_block_device": [],
            "iam_instance_profile": "benwhite-eks-workshop20190804164017256400000009",
            "id": "benwhite-eks-workshop-020190804165803846800000001",
            "image_id": "ami-00ac2e6b3cb38a9b9",
            "instance_type": "t3.medium",
            "key_name": "",
            "name": "benwhite-eks-workshop-020190804165803846800000001",
            "name_prefix": "benwhite-eks-workshop-0",
            "placement_tenancy": "",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "iops": 0,
                "volume_size": 100,
                "volume_type": "gp2"
              }
            ],
            "security_groups": [
              "sg-0d14745e5452eb41f"
            ],
            "spot_price": "",
            "user_data": null,
            "user_data_base64": "IyEvYmluL2Jhc2ggLXhlCgojIEFsbG93IHVzZXIgc3VwcGxpZWQgcHJlIHVzZXJkYXRhIGNvZGUKZXhlYyA+ID4odGVlIC92YXIvbG9nL3VzZXItZGF0YS5sb2d8bG9nZ2VyIC10IHVzZXItZGF0YSAtcyAyPi9kZXYvY29uc29sZSkgMj4mMQp5dW0gaW5zdGFsbCAteSBodHRwczovL3MzLmFtYXpvbmF3cy5jb20vZWMyLWRvd25sb2Fkcy13aW5kb3dzL1NTTUFnZW50L2xhdGVzdC9saW51eF9hbWQ2NC9hbWF6b24tc3NtLWFnZW50LnJwbQpzeXN0ZW1jdGwgZW5hYmxlIGFtYXpvbi1zc20tYWdlbnQKc3lzdGVtY3RsIHN0YXJ0IGFtYXpvbi1zc20tYWdlbnQKc2VkIC1pIC1lICdzLzIwNDgvNjU1MzYvZycgL2V0Yy9kb2NrZXIvZGFlbW9uLmpzb24Kc2VkIC1pIC1lICdzLzgxOTIvNjU1MzYvZycgL2V0Yy9kb2NrZXIvZGFlbW9uLmpzb24Kc3lzdGVtY3RsIHJlc3RhcnQgZG9ja2VyLnNlcnZpY2UKCgojIEJvb3RzdHJhcCBhbmQgam9pbiB0aGUgY2x1c3RlcgovZXRjL2Vrcy9ib290c3RyYXAuc2ggLS1iNjQtY2x1c3Rlci1jYSAnTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVTjVSRU5EUVdKRFowRjNTVUpCWjBsQ1FVUkJUa0puYTNGb2EybEhPWGN3UWtGUmMwWkJSRUZXVFZKTmQwVlJXVVJXVVZGRVJYZHdjbVJYU213S1kyMDFiR1JIVm5wTlFqUllSRlJGTlUxRVozZE9SRVV5VFhwamVrMHhiMWhFVkVrMVRVUm5kMDFVUlRKTmVtTjZUVEZ2ZDBaVVJWUk5Ra1ZIUVRGVlJRcEJlRTFMWVROV2FWcFlTblZhV0ZKc1kzcERRMEZUU1hkRVVWbEtTMjlhU1doMlkwNUJVVVZDUWxGQlJHZG5SVkJCUkVORFFWRnZRMmRuUlVKQlRFTTNDbmhyVHpkRFp5OVVaSEJJVDFKeFVqTjVNUzlOZG5GWlREVmFkREZWZWxoVGJXMXBZWFpzU25SNFUxZE9hMmRGWmxCNFdVdEpUMDh2U1RGaFlsUTNNMndLTjAxU0syMWhhM0JMUXpCMVZFdHVRbEo1T1U1d04yWkVVMFJPT0U5bGRtcEdOVVYzV1ZONU4ySndSRFkxTmtaT2FtVlNVMVZ6UVdSdVduaFpNbmcxUndweFNVaFZOaklyUzJkd1l6bDFaR2RyZWxkemNFWlJTMjFaVkZKTmFtbDNTek53YUhaV2JUSkNiMVF4Y1ZGNmJYZHBORmhqVUVKc2JVeEdTa3BCVWpOMUNsWnZaV3hOT0RsRlFYUk5NREJYZFRoR05XbEtUa0ZEUzFrMk9XRXZkemxpYmpoRU5GRnRMMkZ3Um10M1psTllUVWxxZVdGME9VbENaVWcyUTNZM1ZFb0tXRWt2U21vMVZGbFpRa2xTZUhkbk1WQmFRVTFWVDJkWldYaFJRVzVCTlZGS0swOUhiM295UXpnM01sUnNMMjlsY2psT1JXdEJXSEJTWkUxdGJWUkZOQXB6VjNodU1rcGlhRTFaUlRGTVltSTRXVVE0UTBGM1JVRkJZVTFxVFVORmQwUm5XVVJXVWpCUVFWRklMMEpCVVVSQlowdHJUVUU0UjBFeFZXUkZkMFZDQ2k5M1VVWk5RVTFDUVdZNGQwUlJXVXBMYjFwSmFIWmpUa0ZSUlV4Q1VVRkVaMmRGUWtGRVFqa3dLMEZyTkZjd2IxUnNZVTA0Y1VsWlFqbHVTbXhpZUVnS1QzSkRkRW80VkVsSVNFbHNZbFk1WlZrelVYZExRMDAwWXk5YUwwMHliVzlOYkM5M1pWY3JabmN4S3pWbk0yUm1jMlJqY1U5MWNEbFVNV2wzYUdwWlRncFhlRlpTVlhoYVNVOXliMkZVT1VRMmVVaHlMMWR4UTFWUGEwb3lWblp1VXl0VlZ6ZG5RWGxKWkdWclFsUkdTM0ZKVjFsc1EwaHJWamRYUVU1V1dIRnlDalEyUVhCak1YcDVkbVo2TkhWb1FVcFlRaXRCYzFveWJtMHlkakUwVFZaRlRESnhUR1pyWVhSb2VVWnpWV2x3V0ZVelZIVkpOMUp6T1ZZMWFXOHhNSElLZEZOMFlWVkpSbUZ5TUdaU1oxZzFkekpKVUZCU01HSkxNbWRhWlRSSVkyUmxlUzlxUm5KclkwTnVVV1pyT1VzNU5uQkRaWEZaYURkT1pISnBNMlZEZVFwWVoxWkxNVzVaZGtRNUszZDZURFptWjNSUEwydEhVakYwWkV4RU9WcHpNazVRT0ZRelQyWk9WMEZpZVhGRVVsSjVUM1JKVlZGNFNteHlSVDBLTFMwdExTMUZUa1FnUTBWU1ZFbEdTVU5CVkVVdExTMHRMUW89JyAtLWFwaXNlcnZlci1lbmRwb2ludCAnaHR0cHM6Ly8wNURCMzc1RUIyNEVFNkE0QjM2NTE0NzhEMDQyNUVCNy5zazEuZXUtd2VzdC0xLmVrcy5hbWF6b25hd3MuY29tJyAgLS1rdWJlbGV0LWV4dHJhLWFyZ3MgJycgJ2JlbndoaXRlLWVrcy13b3Jrc2hvcCcKCiMgQWxsb3cgdXNlciBzdXBwbGllZCB1c2VyZGF0YSBjb2RlCgo=",
            "vpc_classic_link_id": "",
            "vpc_classic_link_security_groups": null
          },
          "private": "bnVsbA==",
          "depends_on": [
            "aws_eks_cluster.this",
            "aws_iam_instance_profile.workers",
            "data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
            "data.template_file.userdata"
          ]
        }
      ]
    },
    {
      "module": "module.eks.module.eks",
      "mode": "managed",
      "type": "aws_launch_template",
      "name": "workers_launch_template",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.eks.module.eks",
      "mode": "managed",
      "type": "aws_launch_template",
      "name": "workers_launch_template_mixed",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "cert_validation",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "failover_routing_policy": [],
            "fqdn": "_e0d0a07e5584a7b9530eed224adbcbb6.eks-workshop.edge-labs.com",
            "geolocation_routing_policy": [],
            "health_check_id": "",
            "id": "Z140XIPF5ZE3HA__e0d0a07e5584a7b9530eed224adbcbb6.eks-workshop.edge-labs.com._CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": null,
            "name": "_e0d0a07e5584a7b9530eed224adbcbb6.eks-workshop.edge-labs.com",
            "records": [
              "_ef55731bfed4157fa6b8e61eccda8b12.duyqrilejt.acm-validations.aws."
            ],
            "set_identifier": "",
            "ttl": 60,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z140XIPF5ZE3HA"
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "depends_on": [
            "aws_acm_certificate.cert",
            "aws_route53_zone.main"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "ns_record",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "failover_routing_policy": [],
            "fqdn": "eks-workshop.edge-labs.com",
            "geolocation_routing_policy": [],
            "health_check_id": "",
            "id": "Z3W1DKT9ZF4YZC_eks-workshop.edge-labs.com_NS",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": null,
            "name": "eks-workshop.edge-labs.com",
            "records": [
              "ns-1284.awsdns-32.org",
              "ns-1889.awsdns-44.co.uk",
              "ns-50.awsdns-06.com",
              "ns-600.awsdns-11.net"
            ],
            "set_identifier": "",
            "ttl": 300,
            "type": "NS",
            "weighted_routing_policy": [],
            "zone_id": "Z3W1DKT9ZF4YZC"
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "depends_on": [
            "aws_route53_zone.main",
            "data.aws_route53_zone.edgelabs"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_route53_zone",
      "name": "main",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "comment": "Managed by Terraform",
            "delegation_set_id": "",
            "force_destroy": false,
            "id": "Z140XIPF5ZE3HA",
            "name": "eks-workshop.edge-labs.com.",
            "name_servers": [
              "ns-1284.awsdns-32.org",
              "ns-1889.awsdns-44.co.uk",
              "ns-50.awsdns-06.com",
              "ns-600.awsdns-11.net"
            ],
            "tags": {
              "Creator": "ben-white",
              "Project": "bewh-eks-workshop"
            },
            "vpc": [],
            "vpc_id": null,
            "vpc_region": null,
            "zone_id": "Z140XIPF5ZE3HA"
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.eks.module.eks",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "cluster",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:eu-west-1:453776291432:security-group/sg-0ae63b6e459d13a6b",
            "description": "EKS cluster security group.",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow cluster egress access to the Internet.",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "id": "sg-0ae63b6e459d13a6b",
            "ingress": [
              {
                "cidr_blocks": [],
                "description": "Allow pods to communicate with the EKS cluster API.",
                "from_port": 443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0d14745e5452eb41f"
                ],
                "self": false,
                "to_port": 443
              }
            ],
            "name": "benwhite-eks-workshop20190804163024431100000003",
            "name_prefix": "benwhite-eks-workshop",
            "owner_id": "453776291432",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "benwhite-eks-workshop-eks_cluster_sg"
            },
            "timeouts": null,
            "vpc_id": "vpc-aef4b3c9"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "module": "module.eks.module.eks",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "workers",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:eu-west-1:453776291432:security-group/sg-0d14745e5452eb41f",
            "description": "Security group for all nodes in the cluster.",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow nodes all egress to the Internet.",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "id": "sg-0d14745e5452eb41f",
            "ingress": [
              {
                "cidr_blocks": [],
                "description": "",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [
                  "sg-05244ce4e7ab05dc9"
                ],
                "self": false,
                "to_port": 0
              },
              {
                "cidr_blocks": [],
                "description": "Allow node to communicate with each other.",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": true,
                "to_port": 0
              },
              {
                "cidr_blocks": [],
                "description": "Allow pods running extension API servers on port 443 to receive communication from cluster control plane.",
                "from_port": 443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0ae63b6e459d13a6b"
                ],
                "self": false,
                "to_port": 443
              },
              {
                "cidr_blocks": [],
                "description": "Allow workers pods to receive communication from the cluster control plane.",
                "from_port": 1025,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0ae63b6e459d13a6b"
                ],
                "self": false,
                "to_port": 65535
              }
            ],
            "name": "benwhite-eks-workshop20190804164016264300000007",
            "name_prefix": "benwhite-eks-workshop",
            "owner_id": "453776291432",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "benwhite-eks-workshop-eks_worker_sg",
              "kubernetes.io/cluster/benwhite-eks-workshop": "owned"
            },
            "timeouts": null,
            "vpc_id": "vpc-aef4b3c9"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "depends_on": [
            "aws_eks_cluster.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks.module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "cluster_egress_internet",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": [
              "0.0.0.0/0"
            ],
            "description": "Allow cluster egress access to the Internet.",
            "from_port": 0,
            "id": "sgrule-96136128",
            "ipv6_cidr_blocks": [],
            "prefix_list_ids": [],
            "protocol": "-1",
            "security_group_id": "sg-0ae63b6e459d13a6b",
            "self": false,
            "source_security_group_id": null,
            "to_port": 0,
            "type": "egress"
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "depends_on": [
            "aws_security_group.cluster[0]"
          ]
        }
      ]
    },
    {
      "module": "module.eks.module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "cluster_https_worker_ingress",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": [],
            "description": "Allow pods to communicate with the EKS cluster API.",
            "from_port": 443,
            "id": "sgrule-2253238570",
            "ipv6_cidr_blocks": [],
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-0ae63b6e459d13a6b",
            "self": false,
            "source_security_group_id": "sg-0d14745e5452eb41f",
            "to_port": 443,
            "type": "ingress"
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "depends_on": [
            "aws_security_group.cluster[0]"
          ]
        }
      ]
    },
    {
      "module": "module.eks.module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "workers_egress_internet",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": [
              "0.0.0.0/0"
            ],
            "description": "Allow nodes all egress to the Internet.",
            "from_port": 0,
            "id": "sgrule-758029128",
            "ipv6_cidr_blocks": [],
            "prefix_list_ids": [],
            "protocol": "-1",
            "security_group_id": "sg-0d14745e5452eb41f",
            "self": false,
            "source_security_group_id": null,
            "to_port": 0,
            "type": "egress"
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "depends_on": [
            "aws_security_group.workers[0]"
          ]
        }
      ]
    },
    {
      "module": "module.eks.module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "workers_ingress_cluster",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": [],
            "description": "Allow workers pods to receive communication from the cluster control plane.",
            "from_port": 1025,
            "id": "sgrule-3812618921",
            "ipv6_cidr_blocks": [],
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-0d14745e5452eb41f",
            "self": false,
            "source_security_group_id": "sg-0ae63b6e459d13a6b",
            "to_port": 65535,
            "type": "ingress"
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "depends_on": [
            "aws_security_group.workers[0]"
          ]
        }
      ]
    },
    {
      "module": "module.eks.module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "workers_ingress_cluster_https",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": [],
            "description": "Allow pods running extension API servers on port 443 to receive communication from cluster control plane.",
            "from_port": 443,
            "id": "sgrule-566209062",
            "ipv6_cidr_blocks": [],
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-0d14745e5452eb41f",
            "self": false,
            "source_security_group_id": "sg-0ae63b6e459d13a6b",
            "to_port": 443,
            "type": "ingress"
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "depends_on": [
            "aws_security_group.workers[0]"
          ]
        }
      ]
    },
    {
      "module": "module.eks.module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "workers_ingress_cluster_kubelet",
      "each": "list",
      "provider": "provider.aws",
      "instances": []
    },
    {
      "module": "module.eks.module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "workers_ingress_self",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": [],
            "description": "Allow node to communicate with each other.",
            "from_port": 0,
            "id": "sgrule-2345365988",
            "ipv6_cidr_blocks": [],
            "prefix_list_ids": [],
            "protocol": "-1",
            "security_group_id": "sg-0d14745e5452eb41f",
            "self": false,
            "source_security_group_id": "sg-0d14745e5452eb41f",
            "to_port": 0,
            "type": "ingress"
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "depends_on": [
            "aws_security_group.workers[0]"
          ]
        }
      ]
    },
    {
      "module": "module.k8s",
      "mode": "managed",
      "type": "kubernetes_cluster_role",
      "name": "external_dns",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "external-dns",
            "metadata": [
              {
                "annotations": {},
                "generation": 0,
                "labels": {},
                "name": "external-dns",
                "resource_version": "690",
                "self_link": "/apis/rbac.authorization.k8s.io/v1/clusterroles/external-dns",
                "uid": "dc28933f-b6d6-11e9-8dd6-06881e9f07b0"
              }
            ],
            "rule": [
              {
                "api_groups": [
                  ""
                ],
                "non_resource_urls": [],
                "resource_names": [],
                "resources": [
                  "services"
                ],
                "verbs": [
                  "get",
                  "watch",
                  "list"
                ]
              },
              {
                "api_groups": [
                  ""
                ],
                "non_resource_urls": [],
                "resource_names": [],
                "resources": [
                  "pods"
                ],
                "verbs": [
                  "get",
                  "watch",
                  "list"
                ]
              },
              {
                "api_groups": [
                  "extensions"
                ],
                "non_resource_urls": [],
                "resource_names": [],
                "resources": [
                  "ingresses"
                ],
                "verbs": [
                  "get",
                  "watch",
                  "list"
                ]
              },
              {
                "api_groups": [
                  ""
                ],
                "non_resource_urls": [],
                "resource_names": [],
                "resources": [
                  "nodes"
                ],
                "verbs": [
                  "list",
                  "watch"
                ]
              }
            ]
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.k8s",
      "mode": "managed",
      "type": "kubernetes_cluster_role",
      "name": "nginx_ingress_clusterrole",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "nginx-ingress-clusterrole",
            "metadata": [
              {
                "annotations": {},
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/name": "ingress-nginx",
                  "app.kubernetes.io/part-of": "ingress-nginx"
                },
                "name": "nginx-ingress-clusterrole",
                "resource_version": "667",
                "self_link": "/apis/rbac.authorization.k8s.io/v1/clusterroles/nginx-ingress-clusterrole",
                "uid": "db4a5594-b6d6-11e9-8dd6-06881e9f07b0"
              }
            ],
            "rule": [
              {
                "api_groups": [
                  ""
                ],
                "non_resource_urls": [],
                "resource_names": [],
                "resources": [
                  "configmaps",
                  "endpoints",
                  "nodes",
                  "pods",
                  "secrets"
                ],
                "verbs": [
                  "list",
                  "watch"
                ]
              },
              {
                "api_groups": [
                  ""
                ],
                "non_resource_urls": [],
                "resource_names": [],
                "resources": [
                  "nodes"
                ],
                "verbs": [
                  "get"
                ]
              },
              {
                "api_groups": [
                  ""
                ],
                "non_resource_urls": [],
                "resource_names": [],
                "resources": [
                  "services"
                ],
                "verbs": [
                  "get",
                  "list",
                  "watch"
                ]
              },
              {
                "api_groups": [
                  ""
                ],
                "non_resource_urls": [],
                "resource_names": [],
                "resources": [
                  "events"
                ],
                "verbs": [
                  "create",
                  "patch"
                ]
              },
              {
                "api_groups": [
                  "extensions",
                  "networking.k8s.io"
                ],
                "non_resource_urls": [],
                "resource_names": [],
                "resources": [
                  "ingresses"
                ],
                "verbs": [
                  "get",
                  "list",
                  "watch"
                ]
              },
              {
                "api_groups": [
                  "extensions",
                  "networking.k8s.io"
                ],
                "non_resource_urls": [],
                "resource_names": [],
                "resources": [
                  "ingresses/status"
                ],
                "verbs": [
                  "update"
                ]
              }
            ]
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.k8s",
      "mode": "managed",
      "type": "kubernetes_cluster_role",
      "name": "node_stats_full",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "node-stats-full",
            "metadata": [
              {
                "annotations": {},
                "generation": 0,
                "labels": {},
                "name": "node-stats-full",
                "resource_version": "657",
                "self_link": "/apis/rbac.authorization.k8s.io/v1/clusterroles/node-stats-full",
                "uid": "db2ffe6f-b6d6-11e9-8dd6-06881e9f07b0"
              }
            ],
            "rule": [
              {
                "api_groups": [
                  ""
                ],
                "non_resource_urls": [],
                "resource_names": [],
                "resources": [
                  "nodes/stats"
                ],
                "verbs": [
                  "get",
                  "watch",
                  "list",
                  "create"
                ]
              }
            ]
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.k8s",
      "mode": "managed",
      "type": "kubernetes_cluster_role",
      "name": "workshop_administrator_cluster_role",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "workshop-administrator-cluster-role",
            "metadata": [
              {
                "annotations": {},
                "generation": 0,
                "labels": {},
                "name": "workshop-administrator-cluster-role",
                "resource_version": "701",
                "self_link": "/apis/rbac.authorization.k8s.io/v1/clusterroles/workshop-administrator-cluster-role",
                "uid": "dcdfa790-b6d6-11e9-8dd6-06881e9f07b0"
              }
            ],
            "rule": [
              {
                "api_groups": [
                  ""
                ],
                "non_resource_urls": [],
                "resource_names": [],
                "resources": [
                  "*"
                ],
                "verbs": [
                  "get",
                  "list"
                ]
              }
            ]
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.k8s",
      "mode": "managed",
      "type": "kubernetes_cluster_role_binding",
      "name": "eks_admin",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "eks-admin",
            "metadata": [
              {
                "annotations": {},
                "generation": 0,
                "labels": {},
                "name": "eks-admin",
                "resource_version": "671",
                "self_link": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/eks-admin",
                "uid": "db5478e2-b6d6-11e9-8dd6-06881e9f07b0"
              }
            ],
            "role_ref": [
              {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "cluster-admin"
              }
            ],
            "subject": [
              {
                "api_group": "",
                "kind": "ServiceAccount",
                "name": "eks-admin",
                "namespace": "kube-system"
              }
            ]
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.k8s",
      "mode": "managed",
      "type": "kubernetes_cluster_role_binding",
      "name": "external_dns_viewer",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "external-dns-viewer",
            "metadata": [
              {
                "annotations": {},
                "generation": 0,
                "labels": {},
                "name": "external-dns-viewer",
                "resource_version": "670",
                "self_link": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/external-dns-viewer",
                "uid": "db53e727-b6d6-11e9-8dd6-06881e9f07b0"
              }
            ],
            "role_ref": [
              {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "external-dns"
              }
            ],
            "subject": [
              {
                "api_group": "",
                "kind": "ServiceAccount",
                "name": "external-dns",
                "namespace": "kube-system"
              }
            ]
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.k8s",
      "mode": "managed",
      "type": "kubernetes_cluster_role_binding",
      "name": "heapster",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "heapster",
            "metadata": [
              {
                "annotations": {},
                "generation": 0,
                "labels": {},
                "name": "heapster",
                "resource_version": "703",
                "self_link": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/heapster",
                "uid": "dd1c1a61-b6d6-11e9-8dd6-06881e9f07b0"
              }
            ],
            "role_ref": [
              {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:heapster"
              }
            ],
            "subject": [
              {
                "api_group": "",
                "kind": "ServiceAccount",
                "name": "heapster",
                "namespace": "kube-system"
              }
            ]
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.k8s",
      "mode": "managed",
      "type": "kubernetes_cluster_role_binding",
      "name": "heapster_node_stats",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "heapster-node-stats",
            "metadata": [
              {
                "annotations": {},
                "generation": 0,
                "labels": {},
                "name": "heapster-node-stats",
                "resource_version": "655",
                "self_link": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/heapster-node-stats",
                "uid": "db2e4e0c-b6d6-11e9-8dd6-06881e9f07b0"
              }
            ],
            "role_ref": [
              {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "node-stats-full"
              }
            ],
            "subject": [
              {
                "api_group": "",
                "kind": "ServiceAccount",
                "name": "heapster",
                "namespace": "kube-system"
              }
            ]
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.k8s",
      "mode": "managed",
      "type": "kubernetes_cluster_role_binding",
      "name": "nginx_ingress_clusterrole_nisa_binding",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "nginx-ingress-clusterrole-nisa-binding",
            "metadata": [
              {
                "annotations": {},
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/name": "ingress-nginx",
                  "app.kubernetes.io/part-of": "ingress-nginx"
                },
                "name": "nginx-ingress-clusterrole-nisa-binding",
                "resource_version": "688",
                "self_link": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/nginx-ingress-clusterrole-nisa-binding",
                "uid": "dc0a427d-b6d6-11e9-8dd6-06881e9f07b0"
              }
            ],
            "role_ref": [
              {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "nginx-ingress-clusterrole"
              }
            ],
            "subject": [
              {
                "api_group": "",
                "kind": "ServiceAccount",
                "name": "nginx-ingress-serviceaccount",
                "namespace": "ingress-nginx"
              }
            ]
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.k8s",
      "mode": "managed",
      "type": "kubernetes_cluster_role_binding",
      "name": "workshop_administrator_cluster_binding",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "workshop-administrator-cluster-binding",
            "metadata": [
              {
                "annotations": {},
                "generation": 0,
                "labels": {},
                "name": "workshop-administrator-cluster-binding",
                "resource_version": "658",
                "self_link": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/workshop-administrator-cluster-binding",
                "uid": "db30b3a8-b6d6-11e9-8dd6-06881e9f07b0"
              }
            ],
            "role_ref": [
              {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "workshop-administrator-cluster-role"
              }
            ],
            "subject": [
              {
                "api_group": "",
                "kind": "ServiceAccount",
                "name": "workshop-administrator",
                "namespace": "default"
              }
            ]
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.k8s",
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "nginx_configuration",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": {},
            "data": {
              "proxy-real-ip-cidr": "0.0.0.0/0",
              "use-forwarded-headers": "true",
              "use-proxy-protocol": "false"
            },
            "id": "ingress-nginx/nginx-configuration",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/name": "ingress-nginx",
                  "app.kubernetes.io/part-of": "ingress-nginx"
                },
                "name": "nginx-configuration",
                "namespace": "ingress-nginx",
                "resource_version": "661",
                "self_link": "/api/v1/namespaces/ingress-nginx/configmaps/nginx-configuration",
                "uid": "db30f7db-b6d6-11e9-8dd6-06881e9f07b0"
              }
            ]
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.k8s",
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "tcp_services",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": {},
            "data": {},
            "id": "ingress-nginx/tcp-services",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/name": "ingress-nginx",
                  "app.kubernetes.io/part-of": "ingress-nginx"
                },
                "name": "tcp-services",
                "namespace": "ingress-nginx",
                "resource_version": "721",
                "self_link": "/api/v1/namespaces/ingress-nginx/configmaps/tcp-services",
                "uid": "dd7d72d5-b6d6-11e9-8dd6-06881e9f07b0"
              }
            ]
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.k8s",
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "udp_services",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": {},
            "data": {},
            "id": "ingress-nginx/udp-services",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/name": "ingress-nginx",
                  "app.kubernetes.io/part-of": "ingress-nginx"
                },
                "name": "udp-services",
                "namespace": "ingress-nginx",
                "resource_version": "689",
                "self_link": "/api/v1/namespaces/ingress-nginx/configmaps/udp-services",
                "uid": "dc0ee20e-b6d6-11e9-8dd6-06881e9f07b0"
              }
            ]
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.k8s",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "external_dns",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "kube-system/external-dns",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 1,
                "labels": {},
                "name": "external-dns",
                "namespace": "kube-system",
                "resource_version": "874",
                "self_link": "/apis/apps/v1/namespaces/kube-system/deployments/external-dns",
                "uid": "dea1a3a0-b6d6-11e9-8dd6-06881e9f07b0"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": 1,
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "external-dns"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [],
                    "type": "Recreate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "external-dns"
                        },
                        "name": "",
                        "namespace": "default",
                        "resource_version": "",
                        "self_link": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [
                              "--source=service",
                              "--source=ingress",
                              "--domain-filter=eks-workshop.edge-labs.com",
                              "--provider=aws",
                              "--policy=upsert-only",
                              "--aws-zone-type=public",
                              "--registry=txt",
                              "--txt-owner-id=Z140XIPF5ZE3HA"
                            ],
                            "command": [],
                            "env": [],
                            "env_from": [],
                            "image": "registry.opensource.zalan.do/teapot/external-dns:latest",
                            "image_pull_policy": "Always",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "external-dns",
                            "port": [],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": [],
                                "requests": []
                              }
                            ],
                            "security_context": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "tty": false,
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "restart_policy": "Always",
                        "security_context": [],
                        "service_account_name": "external-dns",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "volume": []
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH19"
        }
      ]
    },
    {
      "module": "module.k8s",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "heapster",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "kube-system/heapster",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 1,
                "labels": {},
                "name": "heapster",
                "namespace": "kube-system",
                "resource_version": "814",
                "self_link": "/apis/apps/v1/namespaces/kube-system/deployments/heapster",
                "uid": "de2e6dd6-b6d6-11e9-8dd6-06881e9f07b0"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": 1,
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "k8s-app": "heapster"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "k8s-app": "heapster",
                          "task": "monitoring"
                        },
                        "name": "",
                        "namespace": "default",
                        "resource_version": "",
                        "self_link": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [
                              "/heapster",
                              "--source=kubernetes:kubernetes:https://kubernetes.default?useServiceAccount=true\u0026kubeletHttps=true\u0026kubeletPort=10250\u0026insecure=true",
                              "--sink=influxdb:http://monitoring-influxdb.kube-system.svc:8086"
                            ],
                            "env": [],
                            "env_from": [],
                            "image": "k8s.gcr.io/heapster-amd64:v1.5.4",
                            "image_pull_policy": "IfNotPresent",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "heapster",
                            "port": [],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": [],
                                "requests": []
                              }
                            ],
                            "security_context": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "tty": false,
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "restart_policy": "Always",
                        "security_context": [],
                        "service_account_name": "heapster",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "volume": []
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH19"
        }
      ]
    },
    {
      "module": "module.k8s",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "kubernetes_dashboard",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "kube-system/kubernetes-dashboard",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 1,
                "labels": {
                  "k8s-app": "kubernetes-dashboard"
                },
                "name": "kubernetes-dashboard",
                "namespace": "kube-system",
                "resource_version": "824",
                "self_link": "/apis/apps/v1/namespaces/kube-system/deployments/kubernetes-dashboard",
                "uid": "de689745-b6d6-11e9-8dd6-06881e9f07b0"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": 1,
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "k8s-app": "kubernetes-dashboard"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "k8s-app": "kubernetes-dashboard"
                        },
                        "name": "",
                        "namespace": "default",
                        "resource_version": "",
                        "self_link": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [
                              "--enable-insecure-login"
                            ],
                            "command": [],
                            "env": [],
                            "env_from": [],
                            "image": "k8s.gcr.io/kubernetes-dashboard-amd64:v1.10.1",
                            "image_pull_policy": "IfNotPresent",
                            "lifecycle": [],
                            "liveness_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 3,
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/",
                                    "port": "9090",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 30,
                                "period_seconds": 10,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 30
                              }
                            ],
                            "name": "kubernetes-dashboard",
                            "port": [
                              {
                                "container_port": 9090,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": [],
                                "requests": []
                              }
                            ],
                            "security_context": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "tty": false,
                            "volume_mount": [
                              {
                                "mount_path": "/tmp",
                                "name": "tmp-volume",
                                "read_only": false,
                                "sub_path": ""
                              }
                            ],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "restart_policy": "Always",
                        "security_context": [],
                        "service_account_name": "kubernetes-dashboard",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [
                          {
                            "effect": "NoSchedule",
                            "key": "node-role.kubernetes.io/master",
                            "operator": "Equal",
                            "toleration_seconds": "",
                            "value": ""
                          }
                        ],
                        "volume": [
                          {
                            "aws_elastic_block_store": [],
                            "azure_disk": [],
                            "azure_file": [],
                            "ceph_fs": [],
                            "cinder": [],
                            "config_map": [],
                            "downward_api": [],
                            "empty_dir": [
                              {
                                "medium": ""
                              }
                            ],
                            "fc": [],
                            "flex_volume": [],
                            "flocker": [],
                            "gce_persistent_disk": [],
                            "git_repo": [],
                            "glusterfs": [],
                            "host_path": [],
                            "iscsi": [],
                            "local": [],
                            "name": "tmp-volume",
                            "nfs": [],
                            "persistent_volume_claim": [],
                            "photon_persistent_disk": [],
                            "quobyte": [],
                            "rbd": [],
                            "secret": [],
                            "vsphere_volume": []
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH19"
        }
      ]
    },
    {
      "module": "module.k8s",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "monitoring_influxdb",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "kube-system/monitoring-influxdb",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 1,
                "labels": {},
                "name": "monitoring-influxdb",
                "namespace": "kube-system",
                "resource_version": "820",
                "self_link": "/apis/apps/v1/namespaces/kube-system/deployments/monitoring-influxdb",
                "uid": "de790765-b6d6-11e9-8dd6-06881e9f07b0"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": 1,
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "k8s-app": "influxdb"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "k8s-app": "influxdb",
                          "task": "monitoring"
                        },
                        "name": "",
                        "namespace": "default",
                        "resource_version": "",
                        "self_link": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [],
                            "env": [],
                            "env_from": [],
                            "image": "k8s.gcr.io/heapster-influxdb-amd64:v1.5.2",
                            "image_pull_policy": "IfNotPresent",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "influxdb",
                            "port": [],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": [],
                                "requests": []
                              }
                            ],
                            "security_context": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "tty": false,
                            "volume_mount": [
                              {
                                "mount_path": "/data",
                                "name": "influxdb-storage",
                                "read_only": false,
                                "sub_path": ""
                              }
                            ],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "restart_policy": "Always",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "volume": [
                          {
                            "aws_elastic_block_store": [],
                            "azure_disk": [],
                            "azure_file": [],
                            "ceph_fs": [],
                            "cinder": [],
                            "config_map": [],
                            "downward_api": [],
                            "empty_dir": [
                              {
                                "medium": ""
                              }
                            ],
                            "fc": [],
                            "flex_volume": [],
                            "flocker": [],
                            "gce_persistent_disk": [],
                            "git_repo": [],
                            "glusterfs": [],
                            "host_path": [],
                            "iscsi": [],
                            "local": [],
                            "name": "influxdb-storage",
                            "nfs": [],
                            "persistent_volume_claim": [],
                            "photon_persistent_disk": [],
                            "quobyte": [],
                            "rbd": [],
                            "secret": [],
                            "vsphere_volume": []
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH19"
        }
      ]
    },
    {
      "module": "module.k8s",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "nginx_ingress_controller",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "ingress-nginx/nginx-ingress-controller",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 1,
                "labels": {
                  "app.kubernetes.io/name": "ingress-nginx",
                  "app.kubernetes.io/part-of": "ingress-nginx"
                },
                "name": "nginx-ingress-controller",
                "namespace": "ingress-nginx",
                "resource_version": "885",
                "self_link": "/apis/apps/v1/namespaces/ingress-nginx/deployments/nginx-ingress-controller",
                "uid": "dd75b3b6-b6d6-11e9-8dd6-06881e9f07b0"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": 1,
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app.kubernetes.io/name": "ingress-nginx",
                      "app.kubernetes.io/part-of": "ingress-nginx"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {
                          "prometheus.io/port": "10254",
                          "prometheus.io/scrape": "true"
                        },
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app.kubernetes.io/name": "ingress-nginx",
                          "app.kubernetes.io/part-of": "ingress-nginx"
                        },
                        "name": "",
                        "namespace": "default",
                        "resource_version": "",
                        "self_link": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [
                              "/nginx-ingress-controller",
                              "--configmap=ingress-nginx/nginx-configuration",
                              "--tcp-services-configmap=ingress-nginx/tcp-services",
                              "--udp-services-configmap=ingress-nginx/udp-services",
                              "--publish-service=ingress-nginx/ingress-nginx",
                              "--annotations-prefix=nginx.ingress.kubernetes.io"
                            ],
                            "command": [],
                            "env": [
                              {
                                "name": "POD_NAME",
                                "value": "",
                                "value_from": [
                                  {
                                    "config_map_key_ref": [],
                                    "field_ref": [
                                      {
                                        "api_version": "v1",
                                        "field_path": "metadata.name"
                                      }
                                    ],
                                    "resource_field_ref": [],
                                    "secret_key_ref": []
                                  }
                                ]
                              },
                              {
                                "name": "POD_NAMESPACE",
                                "value": "",
                                "value_from": [
                                  {
                                    "config_map_key_ref": [],
                                    "field_ref": [
                                      {
                                        "api_version": "v1",
                                        "field_path": "metadata.namespace"
                                      }
                                    ],
                                    "resource_field_ref": [],
                                    "secret_key_ref": []
                                  }
                                ]
                              }
                            ],
                            "env_from": [],
                            "image": "quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.25.0",
                            "image_pull_policy": "IfNotPresent",
                            "lifecycle": [],
                            "liveness_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 3,
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/healthz",
                                    "port": "10254",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 10,
                                "period_seconds": 10,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 10
                              }
                            ],
                            "name": "nginx-ingress-controller",
                            "port": [
                              {
                                "container_port": 80,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "http",
                                "protocol": "TCP"
                              },
                              {
                                "container_port": 443,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "https",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 3,
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/healthz",
                                    "port": "10254",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 0,
                                "period_seconds": 10,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 10
                              }
                            ],
                            "resources": [
                              {
                                "limits": [],
                                "requests": []
                              }
                            ],
                            "security_context": [
                              {
                                "allow_privilege_escalation": true,
                                "capabilities": [],
                                "privileged": false,
                                "read_only_root_filesystem": false,
                                "run_as_group": 0,
                                "run_as_non_root": false,
                                "run_as_user": 33,
                                "se_linux_options": []
                              }
                            ],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "tty": false,
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "restart_policy": "Always",
                        "security_context": [],
                        "service_account_name": "nginx-ingress-serviceaccount",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "volume": []
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH19"
        }
      ]
    },
    {
      "module": "module.k8s",
      "mode": "managed",
      "type": "kubernetes_ingress",
      "name": "kube-dashboard-ingress",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "kube-system/kubernetes-dashboard",
            "load_balancer_ingress": [
              {
                "hostname": "ade562c72b6d611e98dd606881e9f07b-1079422933.eu-west-1.elb.amazonaws.com",
                "ip": ""
              }
            ],
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 1,
                "labels": {},
                "name": "kubernetes-dashboard",
                "namespace": "kube-system",
                "resource_version": "858",
                "self_link": "/apis/extensions/v1beta1/namespaces/kube-system/ingresses/kubernetes-dashboard",
                "uid": "db4d0cf5-b6d6-11e9-8dd6-06881e9f07b0"
              }
            ],
            "spec": [
              {
                "backend": [],
                "rule": [
                  {
                    "host": "dashboard.eks-workshop.edge-labs.com",
                    "http": [
                      {
                        "path": [
                          {
                            "backend": [
                              {
                                "service_name": "kubernetes-dashboard",
                                "service_port": "80"
                              }
                            ],
                            "path": "/"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "tls": []
              }
            ]
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.k8s",
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "ingress_nginx",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "ingress-nginx",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/name": "ingress-nginx",
                  "app.kubernetes.io/part-of": "ingress-nginx"
                },
                "name": "ingress-nginx",
                "resource_version": "654",
                "self_link": "/api/v1/namespaces/ingress-nginx",
                "uid": "db2de363-b6d6-11e9-8dd6-06881e9f07b0"
              }
            ]
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.k8s",
      "mode": "managed",
      "type": "kubernetes_role",
      "name": "kubernetes_dashboard_minimal",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "kube-system/kubernetes-dashboard-minimal",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "kubernetes-dashboard-minimal",
                "namespace": "kube-system",
                "resource_version": "695",
                "self_link": "/apis/rbac.authorization.k8s.io/v1/namespaces/kube-system/roles/kubernetes-dashboard-minimal",
                "uid": "dc46c7a2-b6d6-11e9-8dd6-06881e9f07b0"
              }
            ],
            "rule": [
              {
                "api_groups": [
                  ""
                ],
                "resource_names": [],
                "resources": [
                  "secrets"
                ],
                "verbs": [
                  "create"
                ]
              },
              {
                "api_groups": [
                  ""
                ],
                "resource_names": [],
                "resources": [
                  "configmaps"
                ],
                "verbs": [
                  "create"
                ]
              },
              {
                "api_groups": [
                  ""
                ],
                "resource_names": [
                  "kubernetes-dashboard-key-holder"
                ],
                "resources": [
                  "secrets"
                ],
                "verbs": [
                  "delete",
                  "get",
                  "update"
                ]
              },
              {
                "api_groups": [
                  ""
                ],
                "resource_names": [
                  "kubernetes-dashboard-settings"
                ],
                "resources": [
                  "configmaps"
                ],
                "verbs": [
                  "get",
                  "update"
                ]
              },
              {
                "api_groups": [
                  ""
                ],
                "resource_names": [
                  "heapster"
                ],
                "resources": [
                  "services"
                ],
                "verbs": [
                  "proxy"
                ]
              },
              {
                "api_groups": [
                  ""
                ],
                "resource_names": [
                  "heapster",
                  "http:heapster:",
                  "https:heapster:"
                ],
                "resources": [
                  "services/proxy"
                ],
                "verbs": [
                  "get"
                ]
              }
            ]
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.k8s",
      "mode": "managed",
      "type": "kubernetes_role",
      "name": "nginx_ingress_role",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "ingress-nginx/nginx-ingress-role",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/name": "ingress-nginx",
                  "app.kubernetes.io/part-of": "ingress-nginx"
                },
                "name": "nginx-ingress-role",
                "namespace": "ingress-nginx",
                "resource_version": "687",
                "self_link": "/apis/rbac.authorization.k8s.io/v1/namespaces/ingress-nginx/roles/nginx-ingress-role",
                "uid": "dbeb3cd9-b6d6-11e9-8dd6-06881e9f07b0"
              }
            ],
            "rule": [
              {
                "api_groups": [
                  ""
                ],
                "resource_names": [],
                "resources": [
                  "configmaps",
                  "namespaces",
                  "pods",
                  "secrets"
                ],
                "verbs": [
                  "get"
                ]
              },
              {
                "api_groups": [
                  ""
                ],
                "resource_names": [
                  "ingress-controller-leader-nginx"
                ],
                "resources": [
                  "configmaps"
                ],
                "verbs": [
                  "get",
                  "update"
                ]
              },
              {
                "api_groups": [
                  ""
                ],
                "resource_names": [],
                "resources": [
                  "configmaps"
                ],
                "verbs": [
                  "create"
                ]
              },
              {
                "api_groups": [
                  ""
                ],
                "resource_names": [],
                "resources": [
                  "endpoints"
                ],
                "verbs": [
                  "get"
                ]
              }
            ]
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.k8s",
      "mode": "managed",
      "type": "kubernetes_role",
      "name": "workshop_administrator",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "default/workshop-administrator",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "workshop-administrator",
                "namespace": "default",
                "resource_version": "707",
                "self_link": "/apis/rbac.authorization.k8s.io/v1/namespaces/default/roles/workshop-administrator",
                "uid": "dd3b3e85-b6d6-11e9-8dd6-06881e9f07b0"
              }
            ],
            "rule": [
              {
                "api_groups": [
                  "",
                  "apps",
                  "batch",
                  "extensions",
                  "rbac.authorization.k8s.io"
                ],
                "resource_names": [],
                "resources": [
                  "*"
                ],
                "verbs": [
                  "*"
                ]
              }
            ]
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.k8s",
      "mode": "managed",
      "type": "kubernetes_role",
      "name": "workshop_viewer",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "default/workshop-viewer",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "workshop-viewer",
                "namespace": "default",
                "resource_version": "669",
                "self_link": "/apis/rbac.authorization.k8s.io/v1/namespaces/default/roles/workshop-viewer",
                "uid": "db522749-b6d6-11e9-8dd6-06881e9f07b0"
              }
            ],
            "rule": [
              {
                "api_groups": [
                  "",
                  "apps",
                  "batch",
                  "extensions"
                ],
                "resource_names": [],
                "resources": [
                  "*"
                ],
                "verbs": [
                  "get",
                  "list"
                ]
              }
            ]
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.k8s",
      "mode": "managed",
      "type": "kubernetes_role_binding",
      "name": "kubernetes_dashboard_minimal",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "kube-system/kubernetes-dashboard-minimal",
            "metadata": [
              {
                "annotations": {},
                "generation": 0,
                "labels": {},
                "name": "kubernetes-dashboard-minimal",
                "namespace": "kube-system",
                "resource_version": "651",
                "self_link": "/apis/rbac.authorization.k8s.io/v1/namespaces/kube-system/rolebindings/kubernetes-dashboard-minimal",
                "uid": "db2b4eb9-b6d6-11e9-8dd6-06881e9f07b0"
              }
            ],
            "role_ref": [
              {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "Role",
                "name": "kubernetes-dashboard-minimal"
              }
            ],
            "subject": [
              {
                "api_group": "",
                "kind": "ServiceAccount",
                "name": "kubernetes-dashboard",
                "namespace": "kube-system"
              }
            ]
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.k8s",
      "mode": "managed",
      "type": "kubernetes_role_binding",
      "name": "nginx_ingress_role_nisa_binding",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "ingress-nginx/nginx-ingress-role-nisa-binding",
            "metadata": [
              {
                "annotations": {},
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/name": "ingress-nginx",
                  "app.kubernetes.io/part-of": "ingress-nginx"
                },
                "name": "nginx-ingress-role-nisa-binding",
                "namespace": "ingress-nginx",
                "resource_version": "702",
                "self_link": "/apis/rbac.authorization.k8s.io/v1/namespaces/ingress-nginx/rolebindings/nginx-ingress-role-nisa-binding",
                "uid": "dcfed134-b6d6-11e9-8dd6-06881e9f07b0"
              }
            ],
            "role_ref": [
              {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "Role",
                "name": "nginx-ingress-role"
              }
            ],
            "subject": [
              {
                "api_group": "",
                "kind": "ServiceAccount",
                "name": "nginx-ingress-serviceaccount",
                "namespace": "ingress-nginx"
              }
            ]
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.k8s",
      "mode": "managed",
      "type": "kubernetes_role_binding",
      "name": "workshop_administrator_binding",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "default/workshop-administrator-binding",
            "metadata": [
              {
                "annotations": {},
                "generation": 0,
                "labels": {},
                "name": "workshop-administrator-binding",
                "namespace": "default",
                "resource_version": "652",
                "self_link": "/apis/rbac.authorization.k8s.io/v1/namespaces/default/rolebindings/workshop-administrator-binding",
                "uid": "db2c3b51-b6d6-11e9-8dd6-06881e9f07b0"
              }
            ],
            "role_ref": [
              {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "Role",
                "name": "workshop-administrator"
              }
            ],
            "subject": [
              {
                "api_group": "",
                "kind": "ServiceAccount",
                "name": "workshop-administrator",
                "namespace": "default"
              }
            ]
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.k8s",
      "mode": "managed",
      "type": "kubernetes_role_binding",
      "name": "workshop_viewer_binding",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "default/workshop-viewer-binding",
            "metadata": [
              {
                "annotations": {},
                "generation": 0,
                "labels": {},
                "name": "workshop-viewer-binding",
                "namespace": "default",
                "resource_version": "672",
                "self_link": "/apis/rbac.authorization.k8s.io/v1/namespaces/default/rolebindings/workshop-viewer-binding",
                "uid": "db582832-b6d6-11e9-8dd6-06881e9f07b0"
              }
            ],
            "role_ref": [
              {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "Role",
                "name": "workshop-viewer"
              }
            ],
            "subject": [
              {
                "api_group": "",
                "kind": "ServiceAccount",
                "name": "workshop-viewer",
                "namespace": "default"
              }
            ]
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.k8s",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "heapster",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "kube-system/heapster",
            "load_balancer_ingress": [],
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "kubernetes.io/cluster-service": "true",
                  "kubernetes.io/name": "Heapster",
                  "task": "monitoring"
                },
                "name": "heapster",
                "namespace": "kube-system",
                "resource_version": "705",
                "self_link": "/api/v1/namespaces/kube-system/services/heapster",
                "uid": "dd23212d-b6d6-11e9-8dd6-06881e9f07b0"
              }
            ],
            "spec": [
              {
                "cluster_ip": "172.20.223.60",
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "name": "",
                    "node_port": 0,
                    "port": 80,
                    "protocol": "TCP",
                    "target_port": "8082"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "k8s-app": "heapster"
                },
                "session_affinity": "None",
                "type": "ClusterIP"
              }
            ]
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.k8s",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "ingress_nginx",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "ingress-nginx/ingress-nginx",
            "load_balancer_ingress": [
              {
                "hostname": "ade562c72b6d611e98dd606881e9f07b-1079422933.eu-west-1.elb.amazonaws.com",
                "ip": ""
              }
            ],
            "metadata": [
              {
                "annotations": {
                  "service.beta.kubernetes.io/aws-load-balancer-backend-protocol": "http",
                  "service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout": "60",
                  "service.beta.kubernetes.io/aws-load-balancer-ssl-cert": "arn:aws:acm:eu-west-1:453776291432:certificate/d384713b-0b8a-490c-9cff-a5e5d90dbd00",
                  "service.beta.kubernetes.io/aws-load-balancer-ssl-ports": "https"
                },
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/name": "ingress-nginx",
                  "app.kubernetes.io/part-of": "ingress-nginx"
                },
                "name": "ingress-nginx",
                "namespace": "ingress-nginx",
                "resource_version": "794",
                "self_link": "/api/v1/namespaces/ingress-nginx/services/ingress-nginx",
                "uid": "de562c72-b6d6-11e9-8dd6-06881e9f07b0"
              }
            ],
            "spec": [
              {
                "cluster_ip": "172.20.232.54",
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "Cluster",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "name": "http",
                    "node_port": 30457,
                    "port": 80,
                    "protocol": "TCP",
                    "target_port": "http"
                  },
                  {
                    "name": "https",
                    "node_port": 32588,
                    "port": 443,
                    "protocol": "TCP",
                    "target_port": "http"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app.kubernetes.io/name": "ingress-nginx",
                  "app.kubernetes.io/part-of": "ingress-nginx"
                },
                "session_affinity": "None",
                "type": "LoadBalancer"
              }
            ]
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.k8s",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "kubernetes_dashboard",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "kube-system/kubernetes-dashboard",
            "load_balancer_ingress": [],
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "k8s-app": "kubernetes-dashboard"
                },
                "name": "kubernetes-dashboard",
                "namespace": "kube-system",
                "resource_version": "675",
                "self_link": "/api/v1/namespaces/kube-system/services/kubernetes-dashboard",
                "uid": "db5d0d52-b6d6-11e9-8dd6-06881e9f07b0"
              }
            ],
            "spec": [
              {
                "cluster_ip": "172.20.29.25",
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "name": "",
                    "node_port": 0,
                    "port": 80,
                    "protocol": "TCP",
                    "target_port": "9090"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "k8s-app": "kubernetes-dashboard"
                },
                "session_affinity": "None",
                "type": "ClusterIP"
              }
            ]
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.k8s",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "monitoring_influxdb",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "kube-system/monitoring-influxdb",
            "load_balancer_ingress": [],
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "kubernetes.io/cluster-service": "true",
                  "kubernetes.io/name": "monitoring-influxdb",
                  "task": "monitoring"
                },
                "name": "monitoring-influxdb",
                "namespace": "kube-system",
                "resource_version": "685",
                "self_link": "/api/v1/namespaces/kube-system/services/monitoring-influxdb",
                "uid": "dbb3d45e-b6d6-11e9-8dd6-06881e9f07b0"
              }
            ],
            "spec": [
              {
                "cluster_ip": "172.20.9.112",
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "name": "",
                    "node_port": 0,
                    "port": 8086,
                    "protocol": "TCP",
                    "target_port": "8086"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "k8s-app": "influxdb"
                },
                "session_affinity": "None",
                "type": "ClusterIP"
              }
            ]
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.k8s",
      "mode": "managed",
      "type": "kubernetes_service_account",
      "name": "eks_admin",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "automount_service_account_token": false,
            "default_secret_name": "eks-admin-token-pt74l",
            "id": "kube-system/eks-admin",
            "image_pull_secret": [],
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "eks-admin",
                "namespace": "kube-system",
                "resource_version": "693",
                "self_link": "/api/v1/namespaces/kube-system/serviceaccounts/eks-admin",
                "uid": "dc2cc9eb-b6d6-11e9-8dd6-06881e9f07b0"
              }
            ],
            "secret": []
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.k8s",
      "mode": "managed",
      "type": "kubernetes_service_account",
      "name": "external_dns",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "automount_service_account_token": false,
            "default_secret_name": "external-dns-token-7d5m6",
            "id": "kube-system/external-dns",
            "image_pull_secret": [],
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "external-dns",
                "namespace": "kube-system",
                "resource_version": "710",
                "self_link": "/api/v1/namespaces/kube-system/serviceaccounts/external-dns",
                "uid": "dd5e0504-b6d6-11e9-8dd6-06881e9f07b0"
              }
            ],
            "secret": []
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.k8s",
      "mode": "managed",
      "type": "kubernetes_service_account",
      "name": "heapster",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "automount_service_account_token": false,
            "default_secret_name": "heapster-token-8bwbz",
            "id": "kube-system/heapster",
            "image_pull_secret": [],
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "heapster",
                "namespace": "kube-system",
                "resource_version": "698",
                "self_link": "/api/v1/namespaces/kube-system/serviceaccounts/heapster",
                "uid": "dc88ab05-b6d6-11e9-8dd6-06881e9f07b0"
              }
            ],
            "secret": []
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.k8s",
      "mode": "managed",
      "type": "kubernetes_service_account",
      "name": "kubernetes_dashboard",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "automount_service_account_token": false,
            "default_secret_name": "kubernetes-dashboard-token-p7hk4",
            "id": "kube-system/kubernetes-dashboard",
            "image_pull_secret": [],
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "k8s-app": "kubernetes-dashboard"
                },
                "name": "kubernetes-dashboard",
                "namespace": "kube-system",
                "resource_version": "681",
                "self_link": "/api/v1/namespaces/kube-system/serviceaccounts/kubernetes-dashboard",
                "uid": "db635a49-b6d6-11e9-8dd6-06881e9f07b0"
              }
            ],
            "secret": []
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.k8s",
      "mode": "managed",
      "type": "kubernetes_service_account",
      "name": "nginx_ingress_serviceaccount",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "automount_service_account_token": false,
            "default_secret_name": "nginx-ingress-serviceaccount-token-f879g",
            "id": "ingress-nginx/nginx-ingress-serviceaccount",
            "image_pull_secret": [],
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/name": "ingress-nginx",
                  "app.kubernetes.io/part-of": "ingress-nginx"
                },
                "name": "nginx-ingress-serviceaccount",
                "namespace": "ingress-nginx",
                "resource_version": "666",
                "self_link": "/api/v1/namespaces/ingress-nginx/serviceaccounts/nginx-ingress-serviceaccount",
                "uid": "db33048a-b6d6-11e9-8dd6-06881e9f07b0"
              }
            ],
            "secret": []
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.k8s",
      "mode": "managed",
      "type": "kubernetes_service_account",
      "name": "workshop_administrator",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "automount_service_account_token": false,
            "default_secret_name": "workshop-administrator-token-hl67d",
            "id": "default/workshop-administrator",
            "image_pull_secret": [],
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "workshop-administrator",
                "namespace": "default",
                "resource_version": "659",
                "self_link": "/api/v1/namespaces/default/serviceaccounts/workshop-administrator",
                "uid": "db2dac25-b6d6-11e9-8dd6-06881e9f07b0"
              }
            ],
            "secret": []
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.k8s",
      "mode": "managed",
      "type": "kubernetes_service_account",
      "name": "workshop_viewer",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "automount_service_account_token": false,
            "default_secret_name": "workshop-viewer-token-vv88k",
            "id": "default/workshop-viewer",
            "image_pull_secret": [],
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "workshop-viewer",
                "namespace": "default",
                "resource_version": "677",
                "self_link": "/api/v1/namespaces/default/serviceaccounts/workshop-viewer",
                "uid": "db5bd69f-b6d6-11e9-8dd6-06881e9f07b0"
              }
            ],
            "secret": []
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.eks.module.eks",
      "mode": "managed",
      "type": "local_file",
      "name": "config_map_aws_auth",
      "each": "list",
      "provider": "provider.local",
      "instances": []
    },
    {
      "module": "module.eks.module.eks",
      "mode": "managed",
      "type": "local_file",
      "name": "kubeconfig",
      "each": "list",
      "provider": "provider.local",
      "instances": []
    },
    {
      "module": "module.eks.module.eks",
      "mode": "managed",
      "type": "null_resource",
      "name": "tags_as_list_of_maps",
      "each": "list",
      "provider": "provider.null",
      "instances": []
    },
    {
      "module": "module.eks.module.eks",
      "mode": "managed",
      "type": "null_resource",
      "name": "update_config_map_aws_auth",
      "each": "list",
      "provider": "provider.null",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "2140318528093940189",
            "triggers": {
              "config_map_rendered": "apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: aws-auth\n  namespace: kube-system\ndata:\n  mapRoles: |\n    - rolearn: arn:aws:iam::453776291432:role/benwhite-eks-workshop20190804164016233800000006\n      username: system:node:{{EC2PrivateDNSName}}\n      groups:\n        - system:bootstrappers\n        - system:nodes\n\n    - rolearn: arn:aws:iam::453776291432:role/AD-Developer\n      username: aws-developer\n      groups:\n        - system:masters\n\n  mapUsers: |\n\n  mapAccounts: |\n\n",
              "endpoint": "https://05DB375EB24EE6A4B3651478D0425EB7.sk1.eu-west-1.eks.amazonaws.com",
              "kube_config_map_rendered": "apiVersion: v1\npreferences: {}\nkind: Config\n\nclusters:\n- cluster:\n    server: https://05DB375EB24EE6A4B3651478D0425EB7.sk1.eu-west-1.eks.amazonaws.com\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRFNU1EZ3dOREUyTXpjek0xb1hEVEk1TURnd01URTJNemN6TTFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTEM3CnhrTzdDZy9UZHBIT1JxUjN5MS9NdnFZTDVadDFVelhTbW1pYXZsSnR4U1dOa2dFZlB4WUtJT08vSTFhYlQ3M2wKN01SK21ha3BLQzB1VEtuQlJ5OU5wN2ZEU0ROOE9ldmpGNUV3WVN5N2JwRDY1NkZOamVSU1VzQWRuWnhZMng1RwpxSUhVNjIrS2dwYzl1ZGdreldzcEZRS21ZVFJNaml3SzNwaHZWbTJCb1QxcVF6bXdpNFhjUEJsbUxGSkpBUjN1ClZvZWxNODlFQXRNMDBXdThGNWlKTkFDS1k2OWEvdzlibjhENFFtL2FwRmt3ZlNYTUlqeWF0OUlCZUg2Q3Y3VEoKWEkvSmo1VFlZQklSeHdnMVBaQU1VT2dZWXhRQW5BNVFKK09Hb3oyQzg3MlRsL29lcjlORWtBWHBSZE1tbVRFNApzV3huMkpiaE1ZRTFMYmI4WUQ4Q0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFEQjkwK0FrNFcwb1RsYU04cUlZQjluSmxieEgKT3JDdEo4VElISElsYlY5ZVkzUXdLQ000Yy9aL00ybW9NbC93ZVcrZncxKzVnM2Rmc2RjcU91cDlUMWl3aGpZTgpXeFZSVXhaSU9yb2FUOUQ2eUhyL1dxQ1VPa0oyVnZuUytVVzdnQXlJZGVrQlRGS3FJV1lsQ0hrVjdXQU5WWHFyCjQ2QXBjMXp5dmZ6NHVoQUpYQitBc1oybm0ydjE0TVZFTDJxTGZrYXRoeUZzVWlwWFUzVHVJN1JzOVY1aW8xMHIKdFN0YVVJRmFyMGZSZ1g1dzJJUFBSMGJLMmdaZTRIY2RleS9qRnJrY0NuUWZrOUs5NnBDZXFZaDdOZHJpM2VDeQpYZ1ZLMW5ZdkQ5K3d6TDZmZ3RPL2tHUjF0ZExEOVpzMk5QOFQzT2ZOV0FieXFEUlJ5T3RJVVF4SmxyRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\n  name: eks_benwhite-eks-workshop\n\ncontexts:\n- context:\n    cluster: eks_benwhite-eks-workshop\n    user: eks_benwhite-eks-workshop\n  name: eks_benwhite-eks-workshop\n\ncurrent-context: eks_benwhite-eks-workshop\n\nusers:\n- name: eks_benwhite-eks-workshop\n  user:\n    exec:\n      apiVersion: client.authentication.k8s.io/v1alpha1\n      command: aws-iam-authenticator\n      args:\n        - \"token\"\n        - \"-i\"\n        - \"benwhite-eks-workshop\"\n\n\n"
            }
          },
          "depends_on": [
            "aws_eks_cluster.this",
            "data.template_file.config_map_aws_auth",
            "data.template_file.kubeconfig"
          ]
        }
      ]
    }
  ]
}
